// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<_UserBarMenu /> render() when logged in, renders succesfully 1`] = `
<_UserBarMenu
  classes={
    Object {
      "avatar": "Component-avatar-3",
      "bigAvatar": "Component-bigAvatar-6",
      "form": "Component-form-7",
      "hidden": "Component-hidden-5",
      "link": "Component-link-4",
      "main": "Component-main-1",
      "paper": "Component-paper-2",
      "submit": "Component-submit-8",
    }
  }
  signOut={[MockFunction]}
  signedIn={true}
  signedInUserData={Object {}}
>
  <Link
    className="Component-link-4"
    replace={false}
    to="/profile"
  >
    <a
      className="Component-link-4"
      href="/profile"
      onClick={[Function]}
    >
      <WithStyles(Avatar)
        className="Component-avatar-3"
      >
        <Avatar
          className="Component-avatar-3"
          classes={
            Object {
              "colorDefault": "MuiAvatar-colorDefault-10",
              "img": "MuiAvatar-img-11",
              "root": "MuiAvatar-root-9",
            }
          }
          component="div"
        >
          <div
            className="MuiAvatar-root-9 MuiAvatar-colorDefault-10 Component-avatar-3"
          >
            <pure(LockOutlinedIcon)>
              <LockOutlinedIcon>
                <WithStyles(SvgIcon)>
                  <SvgIcon
                    classes={
                      Object {
                        "colorAction": "MuiSvgIcon-colorAction-15",
                        "colorDisabled": "MuiSvgIcon-colorDisabled-17",
                        "colorError": "MuiSvgIcon-colorError-16",
                        "colorPrimary": "MuiSvgIcon-colorPrimary-13",
                        "colorSecondary": "MuiSvgIcon-colorSecondary-14",
                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-18",
                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-20",
                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-19",
                        "root": "MuiSvgIcon-root-12",
                      }
                    }
                    color="inherit"
                    component="svg"
                    fontSize="default"
                    viewBox="0 0 24 24"
                  >
                    <svg
                      aria-hidden="true"
                      className="MuiSvgIcon-root-12"
                      focusable="false"
                      role="presentation"
                      viewBox="0 0 24 24"
                    >
                      <g
                        fill="none"
                      >
                        <path
                          d="M0 0h24v24H0V0z"
                        />
                        <path
                          d="M0 0h24v24H0V0z"
                          opacity=".87"
                        />
                      </g>
                      <path
                        d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"
                      />
                    </svg>
                  </SvgIcon>
                </WithStyles(SvgIcon)>
              </LockOutlinedIcon>
            </pure(LockOutlinedIcon)>
          </div>
        </Avatar>
      </WithStyles(Avatar)>
    </a>
  </Link>
  <WithStyles(Button)
    color="inherit"
    id="signoutButton"
    onClick={[Function]}
    size="medium"
  >
    <Button
      classes={
        Object {
          "colorInherit": "MuiButton-colorInherit-42",
          "contained": "MuiButton-contained-32",
          "containedPrimary": "MuiButton-containedPrimary-33",
          "containedSecondary": "MuiButton-containedSecondary-34",
          "disabled": "MuiButton-disabled-41",
          "extendedFab": "MuiButton-extendedFab-39",
          "fab": "MuiButton-fab-38",
          "flat": "MuiButton-flat-26",
          "flatPrimary": "MuiButton-flatPrimary-27",
          "flatSecondary": "MuiButton-flatSecondary-28",
          "focusVisible": "MuiButton-focusVisible-40",
          "fullWidth": "MuiButton-fullWidth-46",
          "label": "MuiButton-label-22",
          "mini": "MuiButton-mini-43",
          "outlined": "MuiButton-outlined-29",
          "outlinedPrimary": "MuiButton-outlinedPrimary-30",
          "outlinedSecondary": "MuiButton-outlinedSecondary-31",
          "raised": "MuiButton-raised-35",
          "raisedPrimary": "MuiButton-raisedPrimary-36",
          "raisedSecondary": "MuiButton-raisedSecondary-37",
          "root": "MuiButton-root-21",
          "sizeLarge": "MuiButton-sizeLarge-45",
          "sizeSmall": "MuiButton-sizeSmall-44",
          "text": "MuiButton-text-23",
          "textPrimary": "MuiButton-textPrimary-24",
          "textSecondary": "MuiButton-textSecondary-25",
        }
      }
      color="inherit"
      component="button"
      disableFocusRipple={false}
      disabled={false}
      fullWidth={false}
      id="signoutButton"
      mini={false}
      onClick={[Function]}
      size="medium"
      type="button"
      variant="text"
    >
      <WithStyles(ButtonBase)
        className="MuiButton-root-21 MuiButton-text-23 MuiButton-flat-26 MuiButton-colorInherit-42"
        component="button"
        disabled={false}
        focusRipple={true}
        focusVisibleClassName="MuiButton-focusVisible-40"
        id="signoutButton"
        onClick={[Function]}
        type="button"
      >
        <ButtonBase
          centerRipple={false}
          className="MuiButton-root-21 MuiButton-text-23 MuiButton-flat-26 MuiButton-colorInherit-42"
          classes={
            Object {
              "disabled": "MuiButtonBase-disabled-48",
              "focusVisible": "MuiButtonBase-focusVisible-49",
              "root": "MuiButtonBase-root-47",
            }
          }
          component="button"
          disableRipple={false}
          disableTouchRipple={false}
          disabled={false}
          focusRipple={true}
          focusVisibleClassName="MuiButton-focusVisible-40"
          id="signoutButton"
          onClick={[Function]}
          tabIndex="0"
          type="button"
        >
          <button
            className="MuiButtonBase-root-47 MuiButton-root-21 MuiButton-text-23 MuiButton-flat-26 MuiButton-colorInherit-42"
            disabled={false}
            id="signoutButton"
            onBlur={[Function]}
            onClick={[Function]}
            onContextMenu={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            tabIndex="0"
            type="button"
          >
            <span
              className="MuiButton-label-22"
            >
              Sign out
            </span>
            <NoSsr
              defer={false}
              fallback={null}
            >
              <WithStyles(TouchRipple)
                center={false}
                innerRef={[Function]}
              >
                <TouchRipple
                  center={false}
                  classes={
                    Object {
                      "child": "MuiTouchRipple-child-54",
                      "childLeaving": "MuiTouchRipple-childLeaving-55",
                      "childPulsate": "MuiTouchRipple-childPulsate-56",
                      "ripple": "MuiTouchRipple-ripple-51",
                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-53",
                      "rippleVisible": "MuiTouchRipple-rippleVisible-52",
                      "root": "MuiTouchRipple-root-50",
                    }
                  }
                >
                  <TransitionGroup
                    childFactory={[Function]}
                    className="MuiTouchRipple-root-50"
                    component="span"
                    enter={true}
                    exit={true}
                  >
                    <span
                      className="MuiTouchRipple-root-50"
                    />
                  </TransitionGroup>
                </TouchRipple>
              </WithStyles(TouchRipple)>
            </NoSsr>
          </button>
        </ButtonBase>
      </WithStyles(ButtonBase)>
    </Button>
  </WithStyles(Button)>
</_UserBarMenu>
`;

exports[`<_UserBarMenu /> render() when logged out, renders succesfully 1`] = `
<_UserBarMenu
  classes={
    Object {
      "avatar": "Component-avatar-3",
      "bigAvatar": "Component-bigAvatar-6",
      "form": "Component-form-7",
      "hidden": "Component-hidden-5",
      "link": "Component-link-4",
      "main": "Component-main-1",
      "paper": "Component-paper-2",
      "submit": "Component-submit-8",
    }
  }
  signOut={[MockFunction]}
  signedIn={false}
  signedInUserData={Object {}}
>
  <Link
    className="Component-link-4"
    replace={false}
    to="/signin"
  >
    <a
      className="Component-link-4"
      href="/signin"
      onClick={[Function]}
    >
      <WithStyles(Button)
        color="inherit"
        size="medium"
      >
        <Button
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-42",
              "contained": "MuiButton-contained-32",
              "containedPrimary": "MuiButton-containedPrimary-33",
              "containedSecondary": "MuiButton-containedSecondary-34",
              "disabled": "MuiButton-disabled-41",
              "extendedFab": "MuiButton-extendedFab-39",
              "fab": "MuiButton-fab-38",
              "flat": "MuiButton-flat-26",
              "flatPrimary": "MuiButton-flatPrimary-27",
              "flatSecondary": "MuiButton-flatSecondary-28",
              "focusVisible": "MuiButton-focusVisible-40",
              "fullWidth": "MuiButton-fullWidth-46",
              "label": "MuiButton-label-22",
              "mini": "MuiButton-mini-43",
              "outlined": "MuiButton-outlined-29",
              "outlinedPrimary": "MuiButton-outlinedPrimary-30",
              "outlinedSecondary": "MuiButton-outlinedSecondary-31",
              "raised": "MuiButton-raised-35",
              "raisedPrimary": "MuiButton-raisedPrimary-36",
              "raisedSecondary": "MuiButton-raisedSecondary-37",
              "root": "MuiButton-root-21",
              "sizeLarge": "MuiButton-sizeLarge-45",
              "sizeSmall": "MuiButton-sizeSmall-44",
              "text": "MuiButton-text-23",
              "textPrimary": "MuiButton-textPrimary-24",
              "textSecondary": "MuiButton-textSecondary-25",
            }
          }
          color="inherit"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-21 MuiButton-text-23 MuiButton-flat-26 MuiButton-colorInherit-42"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-40"
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-21 MuiButton-text-23 MuiButton-flat-26 MuiButton-colorInherit-42"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-48",
                  "focusVisible": "MuiButtonBase-focusVisible-49",
                  "root": "MuiButtonBase-root-47",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-40"
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-47 MuiButton-root-21 MuiButton-text-23 MuiButton-flat-26 MuiButton-colorInherit-42"
                disabled={false}
                onBlur={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-22"
                >
                  Sign in
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-61",
                          "childLeaving": "MuiTouchRipple-childLeaving-62",
                          "childPulsate": "MuiTouchRipple-childPulsate-63",
                          "ripple": "MuiTouchRipple-ripple-58",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-60",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-59",
                          "root": "MuiTouchRipple-root-57",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-57"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-57"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </a>
  </Link>
</_UserBarMenu>
`;
