// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<_ProfileForm /> render() when logged in, renders succesfully 1`] = `ReactWrapper {}`;

exports[`<_ProfileForm /> render() when logged in, shows profile form filled in with userProfileForm data 1`] = `
<WithStyles(Component)
  initProfileForm={
    [MockFunction] {
      "calls": Array [
        Array [],
        Array [],
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  signedIn={true}
  signedInUserData={Object {}}
  updateFormField={[MockFunction]}
  updateProfile={[MockFunction]}
  updateProfileImg={[MockFunction]}
  userProfileForm={
    Object {
      "firstName": "Goce",
      "imageData": "assets/img/userm.png",
      "lastName": "Dokoski",
      "password": "password",
      "repeatPassword": "password",
      "username": "gocedoko",
    }
  }
>
  <Component
    classes={
      Object {
        "avatar": "Component-avatar-3",
        "bigAvatar": "Component-bigAvatar-6",
        "form": "Component-form-7",
        "hidden": "Component-hidden-5",
        "link": "Component-link-4",
        "main": "Component-main-1",
        "paper": "Component-paper-2",
        "submit": "Component-submit-8",
      }
    }
    initProfileForm={
      [MockFunction] {
        "calls": Array [
          Array [],
          Array [],
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      }
    }
    signedIn={true}
    signedInUserData={Object {}}
    updateFormField={[MockFunction]}
    updateProfile={[MockFunction]}
    updateProfileImg={[MockFunction]}
    userProfileForm={
      Object {
        "firstName": "Goce",
        "imageData": "assets/img/userm.png",
        "lastName": "Dokoski",
        "password": "password",
        "repeatPassword": "password",
        "username": "gocedoko",
      }
    }
  >
    <MemoryRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "961k73",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "961k73",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <_ProfileForm
          classes={
            Object {
              "avatar": "Component-avatar-3",
              "bigAvatar": "Component-bigAvatar-6",
              "form": "Component-form-7",
              "hidden": "Component-hidden-5",
              "link": "Component-link-4",
              "main": "Component-main-1",
              "paper": "Component-paper-2",
              "submit": "Component-submit-8",
            }
          }
          initProfileForm={
            [MockFunction] {
              "calls": Array [
                Array [],
                Array [],
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          signedIn={true}
          signedInUserData={Object {}}
          updateFormField={[MockFunction]}
          updateProfile={[MockFunction]}
          updateProfileImg={[MockFunction]}
          userProfileForm={
            Object {
              "firstName": "Goce",
              "imageData": "assets/img/userm.png",
              "lastName": "Dokoski",
              "password": "password",
              "repeatPassword": "password",
              "username": "gocedoko",
            }
          }
        >
          <main
            className="Component-main-1"
          >
            <WithStyles(Paper)
              className="Component-paper-2"
            >
              <Paper
                className="Component-paper-2"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0-165",
                    "elevation1": "MuiPaper-elevation1-166",
                    "elevation10": "MuiPaper-elevation10-175",
                    "elevation11": "MuiPaper-elevation11-176",
                    "elevation12": "MuiPaper-elevation12-177",
                    "elevation13": "MuiPaper-elevation13-178",
                    "elevation14": "MuiPaper-elevation14-179",
                    "elevation15": "MuiPaper-elevation15-180",
                    "elevation16": "MuiPaper-elevation16-181",
                    "elevation17": "MuiPaper-elevation17-182",
                    "elevation18": "MuiPaper-elevation18-183",
                    "elevation19": "MuiPaper-elevation19-184",
                    "elevation2": "MuiPaper-elevation2-167",
                    "elevation20": "MuiPaper-elevation20-185",
                    "elevation21": "MuiPaper-elevation21-186",
                    "elevation22": "MuiPaper-elevation22-187",
                    "elevation23": "MuiPaper-elevation23-188",
                    "elevation24": "MuiPaper-elevation24-189",
                    "elevation3": "MuiPaper-elevation3-168",
                    "elevation4": "MuiPaper-elevation4-169",
                    "elevation5": "MuiPaper-elevation5-170",
                    "elevation6": "MuiPaper-elevation6-171",
                    "elevation7": "MuiPaper-elevation7-172",
                    "elevation8": "MuiPaper-elevation8-173",
                    "elevation9": "MuiPaper-elevation9-174",
                    "root": "MuiPaper-root-163",
                    "rounded": "MuiPaper-rounded-164",
                  }
                }
                component="div"
                elevation={2}
                square={false}
              >
                <div
                  className="MuiPaper-root-163 MuiPaper-elevation2-167 MuiPaper-rounded-164 Component-paper-2"
                >
                  <Component
                    classes={
                      Object {
                        "avatar": "Component-avatar-3",
                        "bigAvatar": "Component-bigAvatar-6",
                        "form": "Component-form-7",
                        "hidden": "Component-hidden-5",
                        "link": "Component-link-4",
                        "main": "Component-main-1",
                        "paper": "Component-paper-2",
                        "submit": "Component-submit-8",
                      }
                    }
                    id="imagePath"
                    src="assets/img/userm.png"
                    username="gocedoko"
                  >
                    <UserImageControl
                      classes={
                        Object {
                          "avatar": "Component-avatar-3",
                          "bigAvatar": "Component-bigAvatar-6",
                          "form": "Component-form-7",
                          "hidden": "Component-hidden-5",
                          "link": "Component-link-4",
                          "main": "Component-main-1",
                          "paper": "Component-paper-2",
                          "submit": "Component-submit-8",
                        }
                      }
                      id="imagePath"
                      onChange={[MockFunction]}
                      src="assets/img/userm.png"
                      username="gocedoko"
                    >
                      <WithStyles(Avatar)
                        className="Component-bigAvatar-6"
                        onClick={[Function]}
                        src="assets/img/userm.png"
                      >
                        <Avatar
                          className="Component-bigAvatar-6"
                          classes={
                            Object {
                              "colorDefault": "MuiAvatar-colorDefault-191",
                              "img": "MuiAvatar-img-192",
                              "root": "MuiAvatar-root-190",
                            }
                          }
                          component="div"
                          onClick={[Function]}
                          src="assets/img/userm.png"
                        >
                          <div
                            className="MuiAvatar-root-190 Component-bigAvatar-6"
                            onClick={[Function]}
                          >
                            <img
                              className="MuiAvatar-img-192"
                              src="assets/img/userm.png"
                            />
                          </div>
                        </Avatar>
                      </WithStyles(Avatar)>
                      <WithStyles(Input)
                        className="Component-hidden-5"
                        id="userImageInput"
                        name="userImageInput"
                        onChange={[Function]}
                        type="file"
                      >
                        <Input
                          className="Component-hidden-5"
                          classes={
                            Object {
                              "disabled": "MuiInput-disabled-196",
                              "error": "MuiInput-error-198",
                              "focused": "MuiInput-focused-195",
                              "formControl": "MuiInput-formControl-194",
                              "fullWidth": "MuiInput-fullWidth-200",
                              "input": "MuiInput-input-201",
                              "inputMarginDense": "MuiInput-inputMarginDense-202",
                              "inputMultiline": "MuiInput-inputMultiline-203",
                              "inputType": "MuiInput-inputType-204",
                              "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                              "multiline": "MuiInput-multiline-199",
                              "root": "MuiInput-root-193",
                              "underline": "MuiInput-underline-197",
                            }
                          }
                          id="userImageInput"
                          name="userImageInput"
                          onChange={[Function]}
                          type="file"
                        >
                          <WithStyles(WithFormControlContext(InputBase))
                            className="Component-hidden-5"
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-196",
                                "error": "MuiInput-error-198",
                                "focused": "MuiInput-focused-195",
                                "formControl": "MuiInput-formControl-194",
                                "fullWidth": "MuiInput-fullWidth-200",
                                "input": "MuiInput-input-201",
                                "inputMarginDense": "MuiInput-inputMarginDense-202",
                                "inputMultiline": "MuiInput-inputMultiline-203",
                                "inputType": "MuiInput-inputType-204",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                "multiline": "MuiInput-multiline-199",
                                "root": "MuiInput-root-193 MuiInput-underline-197",
                                "underline": null,
                              }
                            }
                            fullWidth={false}
                            id="userImageInput"
                            inputComponent="input"
                            multiline={false}
                            name="userImageInput"
                            onChange={[Function]}
                            type="file"
                          >
                            <WithFormControlContext(InputBase)
                              className="Component-hidden-5"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd-211",
                                  "adornedStart": "MuiInputBase-adornedStart-210",
                                  "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                  "error": "MuiInputBase-error-212 MuiInput-error-198",
                                  "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                  "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                  "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                  "input": "MuiInputBase-input-216 MuiInput-input-201",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                  "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                  "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                  "marginDense": "MuiInputBase-marginDense-213",
                                  "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                  "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                }
                              }
                              fullWidth={false}
                              id="userImageInput"
                              inputComponent="input"
                              multiline={false}
                              name="userImageInput"
                              onChange={[Function]}
                              type="file"
                            >
                              <InputBase
                                className="Component-hidden-5"
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-211",
                                    "adornedStart": "MuiInputBase-adornedStart-210",
                                    "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                    "error": "MuiInputBase-error-212 MuiInput-error-198",
                                    "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                    "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                    "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                    "input": "MuiInputBase-input-216 MuiInput-input-201",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                    "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                    "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                    "marginDense": "MuiInputBase-marginDense-213",
                                    "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                    "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                  }
                                }
                                fullWidth={false}
                                id="userImageInput"
                                inputComponent="input"
                                multiline={false}
                                name="userImageInput"
                                onChange={[Function]}
                                type="file"
                              >
                                <div
                                  className="MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197 Component-hidden-5"
                                  onClick={[Function]}
                                >
                                  <input
                                    className="MuiInputBase-input-216 MuiInput-input-201 MuiInputBase-inputType-219 MuiInput-inputType-204"
                                    id="userImageInput"
                                    name="userImageInput"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    type="file"
                                  />
                                </div>
                              </InputBase>
                            </WithFormControlContext(InputBase)>
                          </WithStyles(WithFormControlContext(InputBase))>
                        </Input>
                      </WithStyles(Input)>
                    </UserImageControl>
                  </Component>
                  <WithStyles(Typography)
                    component="h1"
                    variant="h5"
                  >
                    <Typography
                      align="inherit"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter-246",
                          "alignJustify": "MuiTypography-alignJustify-248",
                          "alignLeft": "MuiTypography-alignLeft-245",
                          "alignRight": "MuiTypography-alignRight-247",
                          "body1": "MuiTypography-body1-232",
                          "body2": "MuiTypography-body2-231",
                          "button": "MuiTypography-button-234",
                          "caption": "MuiTypography-caption-233",
                          "colorError": "MuiTypography-colorError-257",
                          "colorInherit": "MuiTypography-colorInherit-252",
                          "colorPrimary": "MuiTypography-colorPrimary-253",
                          "colorSecondary": "MuiTypography-colorSecondary-254",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary-255",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary-256",
                          "display1": "MuiTypography-display1-227",
                          "display2": "MuiTypography-display2-226",
                          "display3": "MuiTypography-display3-225",
                          "display4": "MuiTypography-display4-224",
                          "gutterBottom": "MuiTypography-gutterBottom-250",
                          "h1": "MuiTypography-h1-235",
                          "h2": "MuiTypography-h2-236",
                          "h3": "MuiTypography-h3-237",
                          "h4": "MuiTypography-h4-238",
                          "h5": "MuiTypography-h5-239",
                          "h6": "MuiTypography-h6-240",
                          "headline": "MuiTypography-headline-228",
                          "inline": "MuiTypography-inline-258",
                          "noWrap": "MuiTypography-noWrap-249",
                          "overline": "MuiTypography-overline-243",
                          "paragraph": "MuiTypography-paragraph-251",
                          "root": "MuiTypography-root-223",
                          "srOnly": "MuiTypography-srOnly-244",
                          "subheading": "MuiTypography-subheading-230",
                          "subtitle1": "MuiTypography-subtitle1-241",
                          "subtitle2": "MuiTypography-subtitle2-242",
                          "title": "MuiTypography-title-229",
                        }
                      }
                      color="default"
                      component="h1"
                      gutterBottom={false}
                      headlineMapping={
                        Object {
                          "body1": "p",
                          "body2": "p",
                          "display1": "h1",
                          "display2": "h1",
                          "display3": "h1",
                          "display4": "h1",
                          "h1": "h1",
                          "h2": "h2",
                          "h3": "h3",
                          "h4": "h4",
                          "h5": "h5",
                          "h6": "h6",
                          "headline": "h1",
                          "subheading": "h3",
                          "subtitle1": "h6",
                          "subtitle2": "h6",
                          "title": "h2",
                        }
                      }
                      inline={false}
                      noWrap={false}
                      paragraph={false}
                      theme={
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "lineHeight": "1.46429em",
                            },
                            "body1Next": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "lineHeight": "1.71429em",
                            },
                            "body2Next": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.5,
                            },
                            "button": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "textTransform": "uppercase",
                            },
                            "buttonNext": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "lineHeight": "1.375em",
                            },
                            "captionNext": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "display1": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "lineHeight": "1.20588em",
                            },
                            "display2": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.8125rem",
                              "fontWeight": 400,
                              "lineHeight": "1.13333em",
                              "marginLeft": "-.02em",
                            },
                            "display3": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "-.02em",
                              "lineHeight": "1.30357em",
                              "marginLeft": "-.02em",
                            },
                            "display4": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "7rem",
                              "fontWeight": 300,
                              "letterSpacing": "-.04em",
                              "lineHeight": "1.14286em",
                              "marginLeft": "-.04em",
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1,
                            },
                            "h2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1,
                            },
                            "h3": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.04,
                            },
                            "h4": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.17,
                            },
                            "h5": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.33,
                            },
                            "h6": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "headline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "lineHeight": "1.35417em",
                            },
                            "overline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subheading": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "lineHeight": "1.5em",
                            },
                            "subtitle1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                            "title": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.3125rem",
                              "fontWeight": 500,
                              "lineHeight": "1.16667em",
                            },
                            "useNextVariants": false,
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "tooltip": 1500,
                          },
                        }
                      }
                      variant="h5"
                    >
                      <h1
                        className="MuiTypography-root-223 MuiTypography-h5-239"
                      >
                        gocedoko
                      </h1>
                    </Typography>
                  </WithStyles(Typography)>
                  <form
                    className="Component-form-7"
                  >
                    <Component
                      id="firstName"
                      label="First Name"
                    >
                      <CustomInputControl
                        id="firstName"
                        label="First Name"
                        onChange={[MockFunction]}
                        value="Goce"
                      >
                        <WithStyles(FormControl)
                          fullWidth={true}
                          margin="normal"
                          required={true}
                        >
                          <FormControl
                            classes={
                              Object {
                                "fullWidth": "MuiFormControl-fullWidth-262",
                                "marginDense": "MuiFormControl-marginDense-261",
                                "marginNormal": "MuiFormControl-marginNormal-260",
                                "root": "MuiFormControl-root-259",
                              }
                            }
                            component="div"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            margin="normal"
                            required={true}
                            variant="standard"
                          >
                            <div
                              className="MuiFormControl-root-259 MuiFormControl-marginNormal-260 MuiFormControl-fullWidth-262"
                            >
                              <WithStyles(WithFormControlContext(InputLabel))
                                htmlFor="firstName"
                              >
                                <WithFormControlContext(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-271",
                                      "disabled": "MuiInputLabel-disabled-265",
                                      "error": "MuiInputLabel-error-266",
                                      "filled": "MuiInputLabel-filled-272",
                                      "focused": "MuiInputLabel-focused-264",
                                      "formControl": "MuiInputLabel-formControl-268",
                                      "marginDense": "MuiInputLabel-marginDense-269",
                                      "outlined": "MuiInputLabel-outlined-273",
                                      "required": "MuiInputLabel-required-267",
                                      "root": "MuiInputLabel-root-263",
                                      "shrink": "MuiInputLabel-shrink-270",
                                    }
                                  }
                                  htmlFor="firstName"
                                >
                                  <InputLabel
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-271",
                                        "disabled": "MuiInputLabel-disabled-265",
                                        "error": "MuiInputLabel-error-266",
                                        "filled": "MuiInputLabel-filled-272",
                                        "focused": "MuiInputLabel-focused-264",
                                        "formControl": "MuiInputLabel-formControl-268",
                                        "marginDense": "MuiInputLabel-marginDense-269",
                                        "outlined": "MuiInputLabel-outlined-273",
                                        "required": "MuiInputLabel-required-267",
                                        "root": "MuiInputLabel-root-263",
                                        "shrink": "MuiInputLabel-shrink-270",
                                      }
                                    }
                                    disableAnimation={false}
                                    htmlFor="firstName"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": true,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": true,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <WithStyles(WithFormControlContext(FormLabel))
                                      className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                      classes={
                                        Object {
                                          "disabled": "MuiInputLabel-disabled-265",
                                          "error": "MuiInputLabel-error-266",
                                          "focused": "MuiInputLabel-focused-264",
                                          "required": "MuiInputLabel-required-267",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="firstName"
                                    >
                                      <WithFormControlContext(FormLabel)
                                        className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-280",
                                            "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                            "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                            "filled": "MuiFormLabel-filled-278",
                                            "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                            "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                            "root": "MuiFormLabel-root-274",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="firstName"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-280",
                                              "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                              "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                              "filled": "MuiFormLabel-filled-278",
                                              "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                              "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                              "root": "MuiFormLabel-root-274",
                                            }
                                          }
                                          component="label"
                                          data-shrink={true}
                                          htmlFor="firstName"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": true,
                                              "focused": false,
                                              "margin": "normal",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": true,
                                              "variant": "standard",
                                            }
                                          }
                                        >
                                          <label
                                            className="MuiFormLabel-root-274 MuiFormLabel-filled-278 MuiFormLabel-required-279 MuiInputLabel-required-267 MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                            data-shrink={true}
                                            htmlFor="firstName"
                                          >
                                            First Name
                                            <span
                                              className="MuiFormLabel-asterisk-280"
                                            >
                                               *
                                            </span>
                                          </label>
                                        </FormLabel>
                                      </WithFormControlContext(FormLabel)>
                                    </WithStyles(WithFormControlContext(FormLabel))>
                                  </InputLabel>
                                </WithFormControlContext(InputLabel)>
                              </WithStyles(WithFormControlContext(InputLabel))>
                              <WithStyles(Input)
                                id="firstName"
                                label="First Name"
                                name="firstName"
                                onChange={[Function]}
                                optional="undefined"
                                value="Goce"
                              >
                                <Input
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-196",
                                      "error": "MuiInput-error-198",
                                      "focused": "MuiInput-focused-195",
                                      "formControl": "MuiInput-formControl-194",
                                      "fullWidth": "MuiInput-fullWidth-200",
                                      "input": "MuiInput-input-201",
                                      "inputMarginDense": "MuiInput-inputMarginDense-202",
                                      "inputMultiline": "MuiInput-inputMultiline-203",
                                      "inputType": "MuiInput-inputType-204",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                      "multiline": "MuiInput-multiline-199",
                                      "root": "MuiInput-root-193",
                                      "underline": "MuiInput-underline-197",
                                    }
                                  }
                                  id="firstName"
                                  label="First Name"
                                  name="firstName"
                                  onChange={[Function]}
                                  optional="undefined"
                                  value="Goce"
                                >
                                  <WithStyles(WithFormControlContext(InputBase))
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-196",
                                        "error": "MuiInput-error-198",
                                        "focused": "MuiInput-focused-195",
                                        "formControl": "MuiInput-formControl-194",
                                        "fullWidth": "MuiInput-fullWidth-200",
                                        "input": "MuiInput-input-201",
                                        "inputMarginDense": "MuiInput-inputMarginDense-202",
                                        "inputMultiline": "MuiInput-inputMultiline-203",
                                        "inputType": "MuiInput-inputType-204",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                        "multiline": "MuiInput-multiline-199",
                                        "root": "MuiInput-root-193 MuiInput-underline-197",
                                        "underline": null,
                                      }
                                    }
                                    fullWidth={false}
                                    id="firstName"
                                    inputComponent="input"
                                    label="First Name"
                                    multiline={false}
                                    name="firstName"
                                    onChange={[Function]}
                                    optional="undefined"
                                    type="text"
                                    value="Goce"
                                  >
                                    <WithFormControlContext(InputBase)
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-211",
                                          "adornedStart": "MuiInputBase-adornedStart-210",
                                          "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                          "error": "MuiInputBase-error-212 MuiInput-error-198",
                                          "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                          "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                          "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                          "input": "MuiInputBase-input-216 MuiInput-input-201",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                          "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                          "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                          "marginDense": "MuiInputBase-marginDense-213",
                                          "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                          "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                        }
                                      }
                                      fullWidth={false}
                                      id="firstName"
                                      inputComponent="input"
                                      label="First Name"
                                      multiline={false}
                                      name="firstName"
                                      onChange={[Function]}
                                      optional="undefined"
                                      type="text"
                                      value="Goce"
                                    >
                                      <InputBase
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-211",
                                            "adornedStart": "MuiInputBase-adornedStart-210",
                                            "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                            "error": "MuiInputBase-error-212 MuiInput-error-198",
                                            "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                            "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                            "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                            "input": "MuiInputBase-input-216 MuiInput-input-201",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                            "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                            "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                            "marginDense": "MuiInputBase-marginDense-213",
                                            "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                            "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                          }
                                        }
                                        fullWidth={false}
                                        id="firstName"
                                        inputComponent="input"
                                        label="First Name"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": true,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": true,
                                            "variant": "standard",
                                          }
                                        }
                                        multiline={false}
                                        name="firstName"
                                        onChange={[Function]}
                                        optional="undefined"
                                        type="text"
                                        value="Goce"
                                      >
                                        <div
                                          className="MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197 MuiInputBase-formControl-207 MuiInput-formControl-194"
                                          label="First Name"
                                          onClick={[Function]}
                                          optional="undefined"
                                        >
                                          <input
                                            aria-invalid={false}
                                            className="MuiInputBase-input-216 MuiInput-input-201"
                                            disabled={false}
                                            id="firstName"
                                            name="firstName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={true}
                                            type="text"
                                            value="Goce"
                                          />
                                        </div>
                                      </InputBase>
                                    </WithFormControlContext(InputBase)>
                                  </WithStyles(WithFormControlContext(InputBase))>
                                </Input>
                              </WithStyles(Input)>
                            </div>
                          </FormControl>
                        </WithStyles(FormControl)>
                      </CustomInputControl>
                    </Component>
                    <Component
                      id="lastName"
                      label="Last Name"
                    >
                      <CustomInputControl
                        id="lastName"
                        label="Last Name"
                        onChange={[MockFunction]}
                        value="Dokoski"
                      >
                        <WithStyles(FormControl)
                          fullWidth={true}
                          margin="normal"
                          required={true}
                        >
                          <FormControl
                            classes={
                              Object {
                                "fullWidth": "MuiFormControl-fullWidth-262",
                                "marginDense": "MuiFormControl-marginDense-261",
                                "marginNormal": "MuiFormControl-marginNormal-260",
                                "root": "MuiFormControl-root-259",
                              }
                            }
                            component="div"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            margin="normal"
                            required={true}
                            variant="standard"
                          >
                            <div
                              className="MuiFormControl-root-259 MuiFormControl-marginNormal-260 MuiFormControl-fullWidth-262"
                            >
                              <WithStyles(WithFormControlContext(InputLabel))
                                htmlFor="lastName"
                              >
                                <WithFormControlContext(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-271",
                                      "disabled": "MuiInputLabel-disabled-265",
                                      "error": "MuiInputLabel-error-266",
                                      "filled": "MuiInputLabel-filled-272",
                                      "focused": "MuiInputLabel-focused-264",
                                      "formControl": "MuiInputLabel-formControl-268",
                                      "marginDense": "MuiInputLabel-marginDense-269",
                                      "outlined": "MuiInputLabel-outlined-273",
                                      "required": "MuiInputLabel-required-267",
                                      "root": "MuiInputLabel-root-263",
                                      "shrink": "MuiInputLabel-shrink-270",
                                    }
                                  }
                                  htmlFor="lastName"
                                >
                                  <InputLabel
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-271",
                                        "disabled": "MuiInputLabel-disabled-265",
                                        "error": "MuiInputLabel-error-266",
                                        "filled": "MuiInputLabel-filled-272",
                                        "focused": "MuiInputLabel-focused-264",
                                        "formControl": "MuiInputLabel-formControl-268",
                                        "marginDense": "MuiInputLabel-marginDense-269",
                                        "outlined": "MuiInputLabel-outlined-273",
                                        "required": "MuiInputLabel-required-267",
                                        "root": "MuiInputLabel-root-263",
                                        "shrink": "MuiInputLabel-shrink-270",
                                      }
                                    }
                                    disableAnimation={false}
                                    htmlFor="lastName"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": true,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": true,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <WithStyles(WithFormControlContext(FormLabel))
                                      className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                      classes={
                                        Object {
                                          "disabled": "MuiInputLabel-disabled-265",
                                          "error": "MuiInputLabel-error-266",
                                          "focused": "MuiInputLabel-focused-264",
                                          "required": "MuiInputLabel-required-267",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="lastName"
                                    >
                                      <WithFormControlContext(FormLabel)
                                        className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-280",
                                            "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                            "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                            "filled": "MuiFormLabel-filled-278",
                                            "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                            "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                            "root": "MuiFormLabel-root-274",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="lastName"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-280",
                                              "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                              "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                              "filled": "MuiFormLabel-filled-278",
                                              "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                              "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                              "root": "MuiFormLabel-root-274",
                                            }
                                          }
                                          component="label"
                                          data-shrink={true}
                                          htmlFor="lastName"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": true,
                                              "focused": false,
                                              "margin": "normal",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": true,
                                              "variant": "standard",
                                            }
                                          }
                                        >
                                          <label
                                            className="MuiFormLabel-root-274 MuiFormLabel-filled-278 MuiFormLabel-required-279 MuiInputLabel-required-267 MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                            data-shrink={true}
                                            htmlFor="lastName"
                                          >
                                            Last Name
                                            <span
                                              className="MuiFormLabel-asterisk-280"
                                            >
                                               *
                                            </span>
                                          </label>
                                        </FormLabel>
                                      </WithFormControlContext(FormLabel)>
                                    </WithStyles(WithFormControlContext(FormLabel))>
                                  </InputLabel>
                                </WithFormControlContext(InputLabel)>
                              </WithStyles(WithFormControlContext(InputLabel))>
                              <WithStyles(Input)
                                id="lastName"
                                label="Last Name"
                                name="lastName"
                                onChange={[Function]}
                                optional="undefined"
                                value="Dokoski"
                              >
                                <Input
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-196",
                                      "error": "MuiInput-error-198",
                                      "focused": "MuiInput-focused-195",
                                      "formControl": "MuiInput-formControl-194",
                                      "fullWidth": "MuiInput-fullWidth-200",
                                      "input": "MuiInput-input-201",
                                      "inputMarginDense": "MuiInput-inputMarginDense-202",
                                      "inputMultiline": "MuiInput-inputMultiline-203",
                                      "inputType": "MuiInput-inputType-204",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                      "multiline": "MuiInput-multiline-199",
                                      "root": "MuiInput-root-193",
                                      "underline": "MuiInput-underline-197",
                                    }
                                  }
                                  id="lastName"
                                  label="Last Name"
                                  name="lastName"
                                  onChange={[Function]}
                                  optional="undefined"
                                  value="Dokoski"
                                >
                                  <WithStyles(WithFormControlContext(InputBase))
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-196",
                                        "error": "MuiInput-error-198",
                                        "focused": "MuiInput-focused-195",
                                        "formControl": "MuiInput-formControl-194",
                                        "fullWidth": "MuiInput-fullWidth-200",
                                        "input": "MuiInput-input-201",
                                        "inputMarginDense": "MuiInput-inputMarginDense-202",
                                        "inputMultiline": "MuiInput-inputMultiline-203",
                                        "inputType": "MuiInput-inputType-204",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                        "multiline": "MuiInput-multiline-199",
                                        "root": "MuiInput-root-193 MuiInput-underline-197",
                                        "underline": null,
                                      }
                                    }
                                    fullWidth={false}
                                    id="lastName"
                                    inputComponent="input"
                                    label="Last Name"
                                    multiline={false}
                                    name="lastName"
                                    onChange={[Function]}
                                    optional="undefined"
                                    type="text"
                                    value="Dokoski"
                                  >
                                    <WithFormControlContext(InputBase)
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-211",
                                          "adornedStart": "MuiInputBase-adornedStart-210",
                                          "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                          "error": "MuiInputBase-error-212 MuiInput-error-198",
                                          "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                          "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                          "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                          "input": "MuiInputBase-input-216 MuiInput-input-201",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                          "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                          "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                          "marginDense": "MuiInputBase-marginDense-213",
                                          "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                          "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                        }
                                      }
                                      fullWidth={false}
                                      id="lastName"
                                      inputComponent="input"
                                      label="Last Name"
                                      multiline={false}
                                      name="lastName"
                                      onChange={[Function]}
                                      optional="undefined"
                                      type="text"
                                      value="Dokoski"
                                    >
                                      <InputBase
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-211",
                                            "adornedStart": "MuiInputBase-adornedStart-210",
                                            "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                            "error": "MuiInputBase-error-212 MuiInput-error-198",
                                            "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                            "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                            "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                            "input": "MuiInputBase-input-216 MuiInput-input-201",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                            "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                            "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                            "marginDense": "MuiInputBase-marginDense-213",
                                            "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                            "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                          }
                                        }
                                        fullWidth={false}
                                        id="lastName"
                                        inputComponent="input"
                                        label="Last Name"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": true,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": true,
                                            "variant": "standard",
                                          }
                                        }
                                        multiline={false}
                                        name="lastName"
                                        onChange={[Function]}
                                        optional="undefined"
                                        type="text"
                                        value="Dokoski"
                                      >
                                        <div
                                          className="MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197 MuiInputBase-formControl-207 MuiInput-formControl-194"
                                          label="Last Name"
                                          onClick={[Function]}
                                          optional="undefined"
                                        >
                                          <input
                                            aria-invalid={false}
                                            className="MuiInputBase-input-216 MuiInput-input-201"
                                            disabled={false}
                                            id="lastName"
                                            name="lastName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={true}
                                            type="text"
                                            value="Dokoski"
                                          />
                                        </div>
                                      </InputBase>
                                    </WithFormControlContext(InputBase)>
                                  </WithStyles(WithFormControlContext(InputBase))>
                                </Input>
                              </WithStyles(Input)>
                            </div>
                          </FormControl>
                        </WithStyles(FormControl)>
                      </CustomInputControl>
                    </Component>
                    <Component
                      id="password"
                      label="New Password"
                      optional={true}
                      type="password"
                    >
                      <CustomInputControl
                        id="password"
                        label="New Password"
                        onChange={[MockFunction]}
                        optional={true}
                        type="password"
                        value="password"
                      >
                        <WithStyles(FormControl)
                          fullWidth={true}
                          margin="normal"
                          required={false}
                        >
                          <FormControl
                            classes={
                              Object {
                                "fullWidth": "MuiFormControl-fullWidth-262",
                                "marginDense": "MuiFormControl-marginDense-261",
                                "marginNormal": "MuiFormControl-marginNormal-260",
                                "root": "MuiFormControl-root-259",
                              }
                            }
                            component="div"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            margin="normal"
                            required={false}
                            variant="standard"
                          >
                            <div
                              className="MuiFormControl-root-259 MuiFormControl-marginNormal-260 MuiFormControl-fullWidth-262"
                            >
                              <WithStyles(WithFormControlContext(InputLabel))
                                htmlFor="password"
                              >
                                <WithFormControlContext(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-271",
                                      "disabled": "MuiInputLabel-disabled-265",
                                      "error": "MuiInputLabel-error-266",
                                      "filled": "MuiInputLabel-filled-272",
                                      "focused": "MuiInputLabel-focused-264",
                                      "formControl": "MuiInputLabel-formControl-268",
                                      "marginDense": "MuiInputLabel-marginDense-269",
                                      "outlined": "MuiInputLabel-outlined-273",
                                      "required": "MuiInputLabel-required-267",
                                      "root": "MuiInputLabel-root-263",
                                      "shrink": "MuiInputLabel-shrink-270",
                                    }
                                  }
                                  htmlFor="password"
                                >
                                  <InputLabel
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-271",
                                        "disabled": "MuiInputLabel-disabled-265",
                                        "error": "MuiInputLabel-error-266",
                                        "filled": "MuiInputLabel-filled-272",
                                        "focused": "MuiInputLabel-focused-264",
                                        "formControl": "MuiInputLabel-formControl-268",
                                        "marginDense": "MuiInputLabel-marginDense-269",
                                        "outlined": "MuiInputLabel-outlined-273",
                                        "required": "MuiInputLabel-required-267",
                                        "root": "MuiInputLabel-root-263",
                                        "shrink": "MuiInputLabel-shrink-270",
                                      }
                                    }
                                    disableAnimation={false}
                                    htmlFor="password"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": true,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <WithStyles(WithFormControlContext(FormLabel))
                                      className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                      classes={
                                        Object {
                                          "disabled": "MuiInputLabel-disabled-265",
                                          "error": "MuiInputLabel-error-266",
                                          "focused": "MuiInputLabel-focused-264",
                                          "required": "MuiInputLabel-required-267",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="password"
                                    >
                                      <WithFormControlContext(FormLabel)
                                        className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-280",
                                            "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                            "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                            "filled": "MuiFormLabel-filled-278",
                                            "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                            "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                            "root": "MuiFormLabel-root-274",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="password"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-280",
                                              "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                              "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                              "filled": "MuiFormLabel-filled-278",
                                              "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                              "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                              "root": "MuiFormLabel-root-274",
                                            }
                                          }
                                          component="label"
                                          data-shrink={true}
                                          htmlFor="password"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": true,
                                              "focused": false,
                                              "margin": "normal",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": false,
                                              "variant": "standard",
                                            }
                                          }
                                        >
                                          <label
                                            className="MuiFormLabel-root-274 MuiFormLabel-filled-278 MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                            data-shrink={true}
                                            htmlFor="password"
                                          >
                                            New Password
                                          </label>
                                        </FormLabel>
                                      </WithFormControlContext(FormLabel)>
                                    </WithStyles(WithFormControlContext(FormLabel))>
                                  </InputLabel>
                                </WithFormControlContext(InputLabel)>
                              </WithStyles(WithFormControlContext(InputLabel))>
                              <WithStyles(Input)
                                id="password"
                                label="New Password"
                                name="password"
                                onChange={[Function]}
                                optional="true"
                                type="password"
                                value="password"
                              >
                                <Input
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-196",
                                      "error": "MuiInput-error-198",
                                      "focused": "MuiInput-focused-195",
                                      "formControl": "MuiInput-formControl-194",
                                      "fullWidth": "MuiInput-fullWidth-200",
                                      "input": "MuiInput-input-201",
                                      "inputMarginDense": "MuiInput-inputMarginDense-202",
                                      "inputMultiline": "MuiInput-inputMultiline-203",
                                      "inputType": "MuiInput-inputType-204",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                      "multiline": "MuiInput-multiline-199",
                                      "root": "MuiInput-root-193",
                                      "underline": "MuiInput-underline-197",
                                    }
                                  }
                                  id="password"
                                  label="New Password"
                                  name="password"
                                  onChange={[Function]}
                                  optional="true"
                                  type="password"
                                  value="password"
                                >
                                  <WithStyles(WithFormControlContext(InputBase))
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-196",
                                        "error": "MuiInput-error-198",
                                        "focused": "MuiInput-focused-195",
                                        "formControl": "MuiInput-formControl-194",
                                        "fullWidth": "MuiInput-fullWidth-200",
                                        "input": "MuiInput-input-201",
                                        "inputMarginDense": "MuiInput-inputMarginDense-202",
                                        "inputMultiline": "MuiInput-inputMultiline-203",
                                        "inputType": "MuiInput-inputType-204",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                        "multiline": "MuiInput-multiline-199",
                                        "root": "MuiInput-root-193 MuiInput-underline-197",
                                        "underline": null,
                                      }
                                    }
                                    fullWidth={false}
                                    id="password"
                                    inputComponent="input"
                                    label="New Password"
                                    multiline={false}
                                    name="password"
                                    onChange={[Function]}
                                    optional="true"
                                    type="password"
                                    value="password"
                                  >
                                    <WithFormControlContext(InputBase)
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-211",
                                          "adornedStart": "MuiInputBase-adornedStart-210",
                                          "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                          "error": "MuiInputBase-error-212 MuiInput-error-198",
                                          "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                          "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                          "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                          "input": "MuiInputBase-input-216 MuiInput-input-201",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                          "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                          "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                          "marginDense": "MuiInputBase-marginDense-213",
                                          "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                          "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                        }
                                      }
                                      fullWidth={false}
                                      id="password"
                                      inputComponent="input"
                                      label="New Password"
                                      multiline={false}
                                      name="password"
                                      onChange={[Function]}
                                      optional="true"
                                      type="password"
                                      value="password"
                                    >
                                      <InputBase
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-211",
                                            "adornedStart": "MuiInputBase-adornedStart-210",
                                            "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                            "error": "MuiInputBase-error-212 MuiInput-error-198",
                                            "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                            "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                            "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                            "input": "MuiInputBase-input-216 MuiInput-input-201",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                            "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                            "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                            "marginDense": "MuiInputBase-marginDense-213",
                                            "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                            "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                          }
                                        }
                                        fullWidth={false}
                                        id="password"
                                        inputComponent="input"
                                        label="New Password"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": true,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": false,
                                            "variant": "standard",
                                          }
                                        }
                                        multiline={false}
                                        name="password"
                                        onChange={[Function]}
                                        optional="true"
                                        type="password"
                                        value="password"
                                      >
                                        <div
                                          className="MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197 MuiInputBase-formControl-207 MuiInput-formControl-194"
                                          label="New Password"
                                          onClick={[Function]}
                                          optional="true"
                                        >
                                          <input
                                            aria-invalid={false}
                                            className="MuiInputBase-input-216 MuiInput-input-201 MuiInputBase-inputType-219 MuiInput-inputType-204"
                                            disabled={false}
                                            id="password"
                                            name="password"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={false}
                                            type="password"
                                            value="password"
                                          />
                                        </div>
                                      </InputBase>
                                    </WithFormControlContext(InputBase)>
                                  </WithStyles(WithFormControlContext(InputBase))>
                                </Input>
                              </WithStyles(Input)>
                            </div>
                          </FormControl>
                        </WithStyles(FormControl)>
                      </CustomInputControl>
                    </Component>
                    <Component
                      id="repeatPassword"
                      label="Repeat Password"
                      optional={false}
                      type="password"
                    >
                      <CustomInputControl
                        id="repeatPassword"
                        label="Repeat Password"
                        onChange={[MockFunction]}
                        optional={false}
                        type="password"
                        value="password"
                      >
                        <WithStyles(FormControl)
                          fullWidth={true}
                          margin="normal"
                          required={true}
                        >
                          <FormControl
                            classes={
                              Object {
                                "fullWidth": "MuiFormControl-fullWidth-262",
                                "marginDense": "MuiFormControl-marginDense-261",
                                "marginNormal": "MuiFormControl-marginNormal-260",
                                "root": "MuiFormControl-root-259",
                              }
                            }
                            component="div"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            margin="normal"
                            required={true}
                            variant="standard"
                          >
                            <div
                              className="MuiFormControl-root-259 MuiFormControl-marginNormal-260 MuiFormControl-fullWidth-262"
                            >
                              <WithStyles(WithFormControlContext(InputLabel))
                                htmlFor="repeatPassword"
                              >
                                <WithFormControlContext(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-271",
                                      "disabled": "MuiInputLabel-disabled-265",
                                      "error": "MuiInputLabel-error-266",
                                      "filled": "MuiInputLabel-filled-272",
                                      "focused": "MuiInputLabel-focused-264",
                                      "formControl": "MuiInputLabel-formControl-268",
                                      "marginDense": "MuiInputLabel-marginDense-269",
                                      "outlined": "MuiInputLabel-outlined-273",
                                      "required": "MuiInputLabel-required-267",
                                      "root": "MuiInputLabel-root-263",
                                      "shrink": "MuiInputLabel-shrink-270",
                                    }
                                  }
                                  htmlFor="repeatPassword"
                                >
                                  <InputLabel
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-271",
                                        "disabled": "MuiInputLabel-disabled-265",
                                        "error": "MuiInputLabel-error-266",
                                        "filled": "MuiInputLabel-filled-272",
                                        "focused": "MuiInputLabel-focused-264",
                                        "formControl": "MuiInputLabel-formControl-268",
                                        "marginDense": "MuiInputLabel-marginDense-269",
                                        "outlined": "MuiInputLabel-outlined-273",
                                        "required": "MuiInputLabel-required-267",
                                        "root": "MuiInputLabel-root-263",
                                        "shrink": "MuiInputLabel-shrink-270",
                                      }
                                    }
                                    disableAnimation={false}
                                    htmlFor="repeatPassword"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": true,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": true,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <WithStyles(WithFormControlContext(FormLabel))
                                      className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                      classes={
                                        Object {
                                          "disabled": "MuiInputLabel-disabled-265",
                                          "error": "MuiInputLabel-error-266",
                                          "focused": "MuiInputLabel-focused-264",
                                          "required": "MuiInputLabel-required-267",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="repeatPassword"
                                    >
                                      <WithFormControlContext(FormLabel)
                                        className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-280",
                                            "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                            "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                            "filled": "MuiFormLabel-filled-278",
                                            "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                            "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                            "root": "MuiFormLabel-root-274",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="repeatPassword"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-280",
                                              "disabled": "MuiFormLabel-disabled-276 MuiInputLabel-disabled-265",
                                              "error": "MuiFormLabel-error-277 MuiInputLabel-error-266",
                                              "filled": "MuiFormLabel-filled-278",
                                              "focused": "MuiFormLabel-focused-275 MuiInputLabel-focused-264",
                                              "required": "MuiFormLabel-required-279 MuiInputLabel-required-267",
                                              "root": "MuiFormLabel-root-274",
                                            }
                                          }
                                          component="label"
                                          data-shrink={true}
                                          htmlFor="repeatPassword"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": true,
                                              "focused": false,
                                              "margin": "normal",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": true,
                                              "variant": "standard",
                                            }
                                          }
                                        >
                                          <label
                                            className="MuiFormLabel-root-274 MuiFormLabel-filled-278 MuiFormLabel-required-279 MuiInputLabel-required-267 MuiInputLabel-root-263 MuiInputLabel-formControl-268 MuiInputLabel-animated-271 MuiInputLabel-shrink-270"
                                            data-shrink={true}
                                            htmlFor="repeatPassword"
                                          >
                                            Repeat Password
                                            <span
                                              className="MuiFormLabel-asterisk-280"
                                            >
                                               *
                                            </span>
                                          </label>
                                        </FormLabel>
                                      </WithFormControlContext(FormLabel)>
                                    </WithStyles(WithFormControlContext(FormLabel))>
                                  </InputLabel>
                                </WithFormControlContext(InputLabel)>
                              </WithStyles(WithFormControlContext(InputLabel))>
                              <WithStyles(Input)
                                id="repeatPassword"
                                label="Repeat Password"
                                name="repeatPassword"
                                onChange={[Function]}
                                optional="false"
                                type="password"
                                value="password"
                              >
                                <Input
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-196",
                                      "error": "MuiInput-error-198",
                                      "focused": "MuiInput-focused-195",
                                      "formControl": "MuiInput-formControl-194",
                                      "fullWidth": "MuiInput-fullWidth-200",
                                      "input": "MuiInput-input-201",
                                      "inputMarginDense": "MuiInput-inputMarginDense-202",
                                      "inputMultiline": "MuiInput-inputMultiline-203",
                                      "inputType": "MuiInput-inputType-204",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                      "multiline": "MuiInput-multiline-199",
                                      "root": "MuiInput-root-193",
                                      "underline": "MuiInput-underline-197",
                                    }
                                  }
                                  id="repeatPassword"
                                  label="Repeat Password"
                                  name="repeatPassword"
                                  onChange={[Function]}
                                  optional="false"
                                  type="password"
                                  value="password"
                                >
                                  <WithStyles(WithFormControlContext(InputBase))
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-196",
                                        "error": "MuiInput-error-198",
                                        "focused": "MuiInput-focused-195",
                                        "formControl": "MuiInput-formControl-194",
                                        "fullWidth": "MuiInput-fullWidth-200",
                                        "input": "MuiInput-input-201",
                                        "inputMarginDense": "MuiInput-inputMarginDense-202",
                                        "inputMultiline": "MuiInput-inputMultiline-203",
                                        "inputType": "MuiInput-inputType-204",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-205",
                                        "multiline": "MuiInput-multiline-199",
                                        "root": "MuiInput-root-193 MuiInput-underline-197",
                                        "underline": null,
                                      }
                                    }
                                    fullWidth={false}
                                    id="repeatPassword"
                                    inputComponent="input"
                                    label="Repeat Password"
                                    multiline={false}
                                    name="repeatPassword"
                                    onChange={[Function]}
                                    optional="false"
                                    type="password"
                                    value="password"
                                  >
                                    <WithFormControlContext(InputBase)
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-211",
                                          "adornedStart": "MuiInputBase-adornedStart-210",
                                          "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                          "error": "MuiInputBase-error-212 MuiInput-error-198",
                                          "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                          "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                          "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                          "input": "MuiInputBase-input-216 MuiInput-input-201",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                          "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                          "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                          "marginDense": "MuiInputBase-marginDense-213",
                                          "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                          "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                        }
                                      }
                                      fullWidth={false}
                                      id="repeatPassword"
                                      inputComponent="input"
                                      label="Repeat Password"
                                      multiline={false}
                                      name="repeatPassword"
                                      onChange={[Function]}
                                      optional="false"
                                      type="password"
                                      value="password"
                                    >
                                      <InputBase
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-211",
                                            "adornedStart": "MuiInputBase-adornedStart-210",
                                            "disabled": "MuiInputBase-disabled-209 MuiInput-disabled-196",
                                            "error": "MuiInputBase-error-212 MuiInput-error-198",
                                            "focused": "MuiInputBase-focused-208 MuiInput-focused-195",
                                            "formControl": "MuiInputBase-formControl-207 MuiInput-formControl-194",
                                            "fullWidth": "MuiInputBase-fullWidth-215 MuiInput-fullWidth-200",
                                            "input": "MuiInputBase-input-216 MuiInput-input-201",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-222",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-221",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-217 MuiInput-inputMarginDense-202",
                                            "inputMultiline": "MuiInputBase-inputMultiline-218 MuiInput-inputMultiline-203",
                                            "inputType": "MuiInputBase-inputType-219 MuiInput-inputType-204",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-220 MuiInput-inputTypeSearch-205",
                                            "marginDense": "MuiInputBase-marginDense-213",
                                            "multiline": "MuiInputBase-multiline-214 MuiInput-multiline-199",
                                            "root": "MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197",
                                          }
                                        }
                                        fullWidth={false}
                                        id="repeatPassword"
                                        inputComponent="input"
                                        label="Repeat Password"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": true,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": true,
                                            "variant": "standard",
                                          }
                                        }
                                        multiline={false}
                                        name="repeatPassword"
                                        onChange={[Function]}
                                        optional="false"
                                        type="password"
                                        value="password"
                                      >
                                        <div
                                          className="MuiInputBase-root-206 MuiInput-root-193 MuiInput-underline-197 MuiInputBase-formControl-207 MuiInput-formControl-194"
                                          label="Repeat Password"
                                          onClick={[Function]}
                                          optional="false"
                                        >
                                          <input
                                            aria-invalid={false}
                                            className="MuiInputBase-input-216 MuiInput-input-201 MuiInputBase-inputType-219 MuiInput-inputType-204"
                                            disabled={false}
                                            id="repeatPassword"
                                            name="repeatPassword"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={true}
                                            type="password"
                                            value="password"
                                          />
                                        </div>
                                      </InputBase>
                                    </WithFormControlContext(InputBase)>
                                  </WithStyles(WithFormControlContext(InputBase))>
                                </Input>
                              </WithStyles(Input)>
                            </div>
                          </FormControl>
                        </WithStyles(FormControl)>
                      </CustomInputControl>
                    </Component>
                    <WithStyles(Button)
                      className="Component-submit-8"
                      color="primary"
                      fullWidth={true}
                      id="submitButton"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <Button
                        className="Component-submit-8"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-302",
                            "contained": "MuiButton-contained-292",
                            "containedPrimary": "MuiButton-containedPrimary-293",
                            "containedSecondary": "MuiButton-containedSecondary-294",
                            "disabled": "MuiButton-disabled-301",
                            "extendedFab": "MuiButton-extendedFab-299",
                            "fab": "MuiButton-fab-298",
                            "flat": "MuiButton-flat-286",
                            "flatPrimary": "MuiButton-flatPrimary-287",
                            "flatSecondary": "MuiButton-flatSecondary-288",
                            "focusVisible": "MuiButton-focusVisible-300",
                            "fullWidth": "MuiButton-fullWidth-306",
                            "label": "MuiButton-label-282",
                            "mini": "MuiButton-mini-303",
                            "outlined": "MuiButton-outlined-289",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-290",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-291",
                            "raised": "MuiButton-raised-295",
                            "raisedPrimary": "MuiButton-raisedPrimary-296",
                            "raisedSecondary": "MuiButton-raisedSecondary-297",
                            "root": "MuiButton-root-281",
                            "sizeLarge": "MuiButton-sizeLarge-305",
                            "sizeSmall": "MuiButton-sizeSmall-304",
                            "text": "MuiButton-text-283",
                            "textPrimary": "MuiButton-textPrimary-284",
                            "textSecondary": "MuiButton-textSecondary-285",
                          }
                        }
                        color="primary"
                        component="button"
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={true}
                        id="submitButton"
                        mini={false}
                        onClick={[Function]}
                        size="medium"
                        type="button"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-281 MuiButton-contained-292 MuiButton-containedPrimary-293 MuiButton-raised-295 MuiButton-raisedPrimary-296 MuiButton-fullWidth-306 Component-submit-8"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-300"
                          id="submitButton"
                          onClick={[Function]}
                          type="button"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-281 MuiButton-contained-292 MuiButton-containedPrimary-293 MuiButton-raised-295 MuiButton-raisedPrimary-296 MuiButton-fullWidth-306 Component-submit-8"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-308",
                                "focusVisible": "MuiButtonBase-focusVisible-309",
                                "root": "MuiButtonBase-root-307",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-300"
                            id="submitButton"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root-307 MuiButton-root-281 MuiButton-contained-292 MuiButton-containedPrimary-293 MuiButton-raised-295 MuiButton-raisedPrimary-296 MuiButton-fullWidth-306 Component-submit-8"
                              disabled={false}
                              id="submitButton"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <span
                                className="MuiButton-label-282"
                              >
                                Submit
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-314",
                                        "childLeaving": "MuiTouchRipple-childLeaving-315",
                                        "childPulsate": "MuiTouchRipple-childPulsate-316",
                                        "ripple": "MuiTouchRipple-ripple-311",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-313",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-312",
                                        "root": "MuiTouchRipple-root-310",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-310"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-310"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                    <Link
                      className="Component-link-4"
                      replace={false}
                      to="/"
                    >
                      <a
                        className="Component-link-4"
                        href="/"
                        onClick={[Function]}
                      >
                        <WithStyles(Button)
                          className="Component-submit-8"
                          color="secondary"
                          fullWidth={true}
                          variant="contained"
                        >
                          <Button
                            className="Component-submit-8"
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit-302",
                                "contained": "MuiButton-contained-292",
                                "containedPrimary": "MuiButton-containedPrimary-293",
                                "containedSecondary": "MuiButton-containedSecondary-294",
                                "disabled": "MuiButton-disabled-301",
                                "extendedFab": "MuiButton-extendedFab-299",
                                "fab": "MuiButton-fab-298",
                                "flat": "MuiButton-flat-286",
                                "flatPrimary": "MuiButton-flatPrimary-287",
                                "flatSecondary": "MuiButton-flatSecondary-288",
                                "focusVisible": "MuiButton-focusVisible-300",
                                "fullWidth": "MuiButton-fullWidth-306",
                                "label": "MuiButton-label-282",
                                "mini": "MuiButton-mini-303",
                                "outlined": "MuiButton-outlined-289",
                                "outlinedPrimary": "MuiButton-outlinedPrimary-290",
                                "outlinedSecondary": "MuiButton-outlinedSecondary-291",
                                "raised": "MuiButton-raised-295",
                                "raisedPrimary": "MuiButton-raisedPrimary-296",
                                "raisedSecondary": "MuiButton-raisedSecondary-297",
                                "root": "MuiButton-root-281",
                                "sizeLarge": "MuiButton-sizeLarge-305",
                                "sizeSmall": "MuiButton-sizeSmall-304",
                                "text": "MuiButton-text-283",
                                "textPrimary": "MuiButton-textPrimary-284",
                                "textSecondary": "MuiButton-textSecondary-285",
                              }
                            }
                            color="secondary"
                            component="button"
                            disableFocusRipple={false}
                            disabled={false}
                            fullWidth={true}
                            mini={false}
                            size="medium"
                            type="button"
                            variant="contained"
                          >
                            <WithStyles(ButtonBase)
                              className="MuiButton-root-281 MuiButton-contained-292 MuiButton-containedSecondary-294 MuiButton-raised-295 MuiButton-raisedSecondary-297 MuiButton-fullWidth-306 Component-submit-8"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-300"
                              type="button"
                            >
                              <ButtonBase
                                centerRipple={false}
                                className="MuiButton-root-281 MuiButton-contained-292 MuiButton-containedSecondary-294 MuiButton-raised-295 MuiButton-raisedSecondary-297 MuiButton-fullWidth-306 Component-submit-8"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-308",
                                    "focusVisible": "MuiButtonBase-focusVisible-309",
                                    "root": "MuiButtonBase-root-307",
                                  }
                                }
                                component="button"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="MuiButton-focusVisible-300"
                                tabIndex="0"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root-307 MuiButton-root-281 MuiButton-contained-292 MuiButton-containedSecondary-294 MuiButton-raised-295 MuiButton-raisedSecondary-297 MuiButton-fullWidth-306 Component-submit-8"
                                  disabled={false}
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex="0"
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label-282"
                                  >
                                    Cancel
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-314",
                                            "childLeaving": "MuiTouchRipple-childLeaving-315",
                                            "childPulsate": "MuiTouchRipple-childPulsate-316",
                                            "ripple": "MuiTouchRipple-ripple-311",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-313",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-312",
                                            "root": "MuiTouchRipple-root-310",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-310"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-310"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </button>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </Button>
                        </WithStyles(Button)>
                      </a>
                    </Link>
                  </form>
                </div>
              </Paper>
            </WithStyles(Paper)>
          </main>
        </_ProfileForm>
      </Router>
    </MemoryRouter>
  </Component>
</WithStyles(Component)>
`;

exports[`<_ProfileForm /> render() when logged out, redirects to signin 1`] = `
<Redirect
  push={false}
  to="/signin"
/>
`;
