// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<_ProfileForm /> render() when logged in, renders succesfully 1`] = `
<_ProfileForm
  classes={
    Object {
      "avatar": "Component-avatar-3",
      "bigAvatar": "Component-bigAvatar-6",
      "form": "Component-form-7",
      "hidden": "Component-hidden-5",
      "link": "Component-link-4",
      "main": "Component-main-1",
      "paper": "Component-paper-2",
      "submit": "Component-submit-8",
    }
  }
  initProfileForm={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  signedIn={true}
  signedInUserData={Object {}}
  updateFormField={[MockFunction]}
  updateProfile={[MockFunction]}
  updateProfileImg={[MockFunction]}
  userProfileForm={Object {}}
>
  <main
    className="Component-main-1"
  >
    <WithStyles(Paper)
      className="Component-paper-2"
    >
      <Paper
        className="Component-paper-2"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0-11",
            "elevation1": "MuiPaper-elevation1-12",
            "elevation10": "MuiPaper-elevation10-21",
            "elevation11": "MuiPaper-elevation11-22",
            "elevation12": "MuiPaper-elevation12-23",
            "elevation13": "MuiPaper-elevation13-24",
            "elevation14": "MuiPaper-elevation14-25",
            "elevation15": "MuiPaper-elevation15-26",
            "elevation16": "MuiPaper-elevation16-27",
            "elevation17": "MuiPaper-elevation17-28",
            "elevation18": "MuiPaper-elevation18-29",
            "elevation19": "MuiPaper-elevation19-30",
            "elevation2": "MuiPaper-elevation2-13",
            "elevation20": "MuiPaper-elevation20-31",
            "elevation21": "MuiPaper-elevation21-32",
            "elevation22": "MuiPaper-elevation22-33",
            "elevation23": "MuiPaper-elevation23-34",
            "elevation24": "MuiPaper-elevation24-35",
            "elevation3": "MuiPaper-elevation3-14",
            "elevation4": "MuiPaper-elevation4-15",
            "elevation5": "MuiPaper-elevation5-16",
            "elevation6": "MuiPaper-elevation6-17",
            "elevation7": "MuiPaper-elevation7-18",
            "elevation8": "MuiPaper-elevation8-19",
            "elevation9": "MuiPaper-elevation9-20",
            "root": "MuiPaper-root-9",
            "rounded": "MuiPaper-rounded-10",
          }
        }
        component="div"
        elevation={2}
        square={false}
      >
        <div
          className="MuiPaper-root-9 MuiPaper-elevation2-13 MuiPaper-rounded-10 Component-paper-2"
        >
          <UserImageControl
            classes={
              Object {
                "avatar": "Component-avatar-3",
                "bigAvatar": "Component-bigAvatar-6",
                "form": "Component-form-7",
                "hidden": "Component-hidden-5",
                "link": "Component-link-4",
                "main": "Component-main-1",
                "paper": "Component-paper-2",
                "submit": "Component-submit-8",
              }
            }
            id="imagePath"
            onChange={[MockFunction]}
          >
            <WithStyles(Avatar)
              className="Component-bigAvatar-6"
              onClick={[Function]}
            >
              <Avatar
                className="Component-bigAvatar-6"
                classes={
                  Object {
                    "colorDefault": "MuiAvatar-colorDefault-37",
                    "img": "MuiAvatar-img-38",
                    "root": "MuiAvatar-root-36",
                  }
                }
                component="div"
                onClick={[Function]}
              >
                <div
                  className="MuiAvatar-root-36 MuiAvatar-colorDefault-37 Component-bigAvatar-6"
                  onClick={[Function]}
                />
              </Avatar>
            </WithStyles(Avatar)>
            <WithStyles(Input)
              className="Component-hidden-5"
              id="userImageInput"
              name="userImageInput"
              onChange={[Function]}
              type="file"
            >
              <Input
                className="Component-hidden-5"
                classes={
                  Object {
                    "disabled": "MuiInput-disabled-42",
                    "error": "MuiInput-error-44",
                    "focused": "MuiInput-focused-41",
                    "formControl": "MuiInput-formControl-40",
                    "fullWidth": "MuiInput-fullWidth-46",
                    "input": "MuiInput-input-47",
                    "inputMarginDense": "MuiInput-inputMarginDense-48",
                    "inputMultiline": "MuiInput-inputMultiline-49",
                    "inputType": "MuiInput-inputType-50",
                    "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                    "multiline": "MuiInput-multiline-45",
                    "root": "MuiInput-root-39",
                    "underline": "MuiInput-underline-43",
                  }
                }
                id="userImageInput"
                name="userImageInput"
                onChange={[Function]}
                type="file"
              >
                <WithStyles(WithFormControlContext(InputBase))
                  className="Component-hidden-5"
                  classes={
                    Object {
                      "disabled": "MuiInput-disabled-42",
                      "error": "MuiInput-error-44",
                      "focused": "MuiInput-focused-41",
                      "formControl": "MuiInput-formControl-40",
                      "fullWidth": "MuiInput-fullWidth-46",
                      "input": "MuiInput-input-47",
                      "inputMarginDense": "MuiInput-inputMarginDense-48",
                      "inputMultiline": "MuiInput-inputMultiline-49",
                      "inputType": "MuiInput-inputType-50",
                      "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                      "multiline": "MuiInput-multiline-45",
                      "root": "MuiInput-root-39 MuiInput-underline-43",
                      "underline": null,
                    }
                  }
                  fullWidth={false}
                  id="userImageInput"
                  inputComponent="input"
                  multiline={false}
                  name="userImageInput"
                  onChange={[Function]}
                  type="file"
                >
                  <WithFormControlContext(InputBase)
                    className="Component-hidden-5"
                    classes={
                      Object {
                        "adornedEnd": "MuiInputBase-adornedEnd-57",
                        "adornedStart": "MuiInputBase-adornedStart-56",
                        "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                        "error": "MuiInputBase-error-58 MuiInput-error-44",
                        "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                        "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                        "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                        "input": "MuiInputBase-input-62 MuiInput-input-47",
                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                        "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                        "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                        "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                        "marginDense": "MuiInputBase-marginDense-59",
                        "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                        "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                      }
                    }
                    fullWidth={false}
                    id="userImageInput"
                    inputComponent="input"
                    multiline={false}
                    name="userImageInput"
                    onChange={[Function]}
                    type="file"
                  >
                    <InputBase
                      className="Component-hidden-5"
                      classes={
                        Object {
                          "adornedEnd": "MuiInputBase-adornedEnd-57",
                          "adornedStart": "MuiInputBase-adornedStart-56",
                          "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                          "error": "MuiInputBase-error-58 MuiInput-error-44",
                          "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                          "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                          "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                          "input": "MuiInputBase-input-62 MuiInput-input-47",
                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                          "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                          "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                          "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                          "marginDense": "MuiInputBase-marginDense-59",
                          "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                          "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                        }
                      }
                      fullWidth={false}
                      id="userImageInput"
                      inputComponent="input"
                      multiline={false}
                      name="userImageInput"
                      onChange={[Function]}
                      type="file"
                    >
                      <div
                        className="MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43 Component-hidden-5"
                        onClick={[Function]}
                      >
                        <input
                          className="MuiInputBase-input-62 MuiInput-input-47 MuiInputBase-inputType-65 MuiInput-inputType-50"
                          id="userImageInput"
                          name="userImageInput"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          type="file"
                        />
                      </div>
                    </InputBase>
                  </WithFormControlContext(InputBase)>
                </WithStyles(WithFormControlContext(InputBase))>
              </Input>
            </WithStyles(Input)>
          </UserImageControl>
          <WithStyles(Typography)
            component="h1"
            variant="h5"
          >
            <Typography
              align="inherit"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter-92",
                  "alignJustify": "MuiTypography-alignJustify-94",
                  "alignLeft": "MuiTypography-alignLeft-91",
                  "alignRight": "MuiTypography-alignRight-93",
                  "body1": "MuiTypography-body1-78",
                  "body2": "MuiTypography-body2-77",
                  "button": "MuiTypography-button-80",
                  "caption": "MuiTypography-caption-79",
                  "colorError": "MuiTypography-colorError-103",
                  "colorInherit": "MuiTypography-colorInherit-98",
                  "colorPrimary": "MuiTypography-colorPrimary-99",
                  "colorSecondary": "MuiTypography-colorSecondary-100",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary-101",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary-102",
                  "display1": "MuiTypography-display1-73",
                  "display2": "MuiTypography-display2-72",
                  "display3": "MuiTypography-display3-71",
                  "display4": "MuiTypography-display4-70",
                  "gutterBottom": "MuiTypography-gutterBottom-96",
                  "h1": "MuiTypography-h1-81",
                  "h2": "MuiTypography-h2-82",
                  "h3": "MuiTypography-h3-83",
                  "h4": "MuiTypography-h4-84",
                  "h5": "MuiTypography-h5-85",
                  "h6": "MuiTypography-h6-86",
                  "headline": "MuiTypography-headline-74",
                  "inline": "MuiTypography-inline-104",
                  "noWrap": "MuiTypography-noWrap-95",
                  "overline": "MuiTypography-overline-89",
                  "paragraph": "MuiTypography-paragraph-97",
                  "root": "MuiTypography-root-69",
                  "srOnly": "MuiTypography-srOnly-90",
                  "subheading": "MuiTypography-subheading-76",
                  "subtitle1": "MuiTypography-subtitle1-87",
                  "subtitle2": "MuiTypography-subtitle2-88",
                  "title": "MuiTypography-title-75",
                }
              }
              color="default"
              component="h1"
              gutterBottom={false}
              headlineMapping={
                Object {
                  "body1": "p",
                  "body2": "p",
                  "display1": "h1",
                  "display2": "h1",
                  "display3": "h1",
                  "display4": "h1",
                  "h1": "h1",
                  "h2": "h2",
                  "h3": "h3",
                  "h4": "h4",
                  "h5": "h5",
                  "h6": "h6",
                  "headline": "h1",
                  "subheading": "h3",
                  "subtitle1": "h6",
                  "subtitle2": "h6",
                  "title": "h2",
                }
              }
              inline={false}
              noWrap={false}
              paragraph={false}
              theme={
                Object {
                  "breakpoints": Object {
                    "between": [Function],
                    "down": [Function],
                    "keys": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                    "only": [Function],
                    "up": [Function],
                    "values": Object {
                      "lg": 1280,
                      "md": 960,
                      "sm": 600,
                      "xl": 1920,
                      "xs": 0,
                    },
                    "width": [Function],
                  },
                  "direction": "ltr",
                  "mixins": Object {
                    "gutters": [Function],
                    "toolbar": Object {
                      "@media (min-width:0px) and (orientation: landscape)": Object {
                        "minHeight": 48,
                      },
                      "@media (min-width:600px)": Object {
                        "minHeight": 64,
                      },
                      "minHeight": 56,
                    },
                  },
                  "overrides": Object {},
                  "palette": Object {
                    "action": Object {
                      "active": "rgba(0, 0, 0, 0.54)",
                      "disabled": "rgba(0, 0, 0, 0.26)",
                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                      "hover": "rgba(0, 0, 0, 0.08)",
                      "hoverOpacity": 0.08,
                      "selected": "rgba(0, 0, 0, 0.14)",
                    },
                    "augmentColor": [Function],
                    "background": Object {
                      "default": "#fafafa",
                      "paper": "#fff",
                    },
                    "common": Object {
                      "black": "#000",
                      "white": "#fff",
                    },
                    "contrastThreshold": 3,
                    "divider": "rgba(0, 0, 0, 0.12)",
                    "error": Object {
                      "contrastText": "#fff",
                      "dark": "#d32f2f",
                      "light": "#e57373",
                      "main": "#f44336",
                    },
                    "getContrastText": [Function],
                    "grey": Object {
                      "100": "#f5f5f5",
                      "200": "#eeeeee",
                      "300": "#e0e0e0",
                      "400": "#bdbdbd",
                      "50": "#fafafa",
                      "500": "#9e9e9e",
                      "600": "#757575",
                      "700": "#616161",
                      "800": "#424242",
                      "900": "#212121",
                      "A100": "#d5d5d5",
                      "A200": "#aaaaaa",
                      "A400": "#303030",
                      "A700": "#616161",
                    },
                    "primary": Object {
                      "contrastText": "#fff",
                      "dark": "#303f9f",
                      "light": "#7986cb",
                      "main": "#3f51b5",
                    },
                    "secondary": Object {
                      "contrastText": "#fff",
                      "dark": "#c51162",
                      "light": "#ff4081",
                      "main": "#f50057",
                    },
                    "text": Object {
                      "disabled": "rgba(0, 0, 0, 0.38)",
                      "hint": "rgba(0, 0, 0, 0.38)",
                      "primary": "rgba(0, 0, 0, 0.87)",
                      "secondary": "rgba(0, 0, 0, 0.54)",
                    },
                    "tonalOffset": 0.2,
                    "type": "light",
                  },
                  "props": Object {},
                  "shadows": Array [
                    "none",
                    "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                    "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                    "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                  ],
                  "shape": Object {
                    "borderRadius": 4,
                  },
                  "spacing": Object {
                    "unit": 8,
                  },
                  "transitions": Object {
                    "create": [Function],
                    "duration": Object {
                      "complex": 375,
                      "enteringScreen": 225,
                      "leavingScreen": 195,
                      "short": 250,
                      "shorter": 200,
                      "shortest": 150,
                      "standard": 300,
                    },
                    "easing": Object {
                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                    },
                    "getAutoHeightDuration": [Function],
                  },
                  "typography": Object {
                    "body1": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "lineHeight": "1.46429em",
                    },
                    "body1Next": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.5,
                    },
                    "body2": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "lineHeight": "1.71429em",
                    },
                    "body2Next": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.01071em",
                      "lineHeight": 1.5,
                    },
                    "button": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "textTransform": "uppercase",
                    },
                    "buttonNext": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.02857em",
                      "lineHeight": 1.75,
                      "textTransform": "uppercase",
                    },
                    "caption": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "lineHeight": "1.375em",
                    },
                    "captionNext": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.03333em",
                      "lineHeight": 1.66,
                    },
                    "display1": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "lineHeight": "1.20588em",
                    },
                    "display2": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.8125rem",
                      "fontWeight": 400,
                      "lineHeight": "1.13333em",
                      "marginLeft": "-.02em",
                    },
                    "display3": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "-.02em",
                      "lineHeight": "1.30357em",
                      "marginLeft": "-.02em",
                    },
                    "display4": Object {
                      "color": "rgba(0, 0, 0, 0.54)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "7rem",
                      "fontWeight": 300,
                      "letterSpacing": "-.04em",
                      "lineHeight": "1.14286em",
                      "marginLeft": "-.04em",
                    },
                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                    "fontSize": 14,
                    "fontWeightLight": 300,
                    "fontWeightMedium": 500,
                    "fontWeightRegular": 400,
                    "h1": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "6rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.01562em",
                      "lineHeight": 1,
                    },
                    "h2": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3.75rem",
                      "fontWeight": 300,
                      "letterSpacing": "-0.00833em",
                      "lineHeight": 1,
                    },
                    "h3": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "3rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.04,
                    },
                    "h4": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "2.125rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00735em",
                      "lineHeight": 1.17,
                    },
                    "h5": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "letterSpacing": "0em",
                      "lineHeight": 1.33,
                    },
                    "h6": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.25rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.0075em",
                      "lineHeight": 1.6,
                    },
                    "headline": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.5rem",
                      "fontWeight": 400,
                      "lineHeight": "1.35417em",
                    },
                    "overline": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.75rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.08333em",
                      "lineHeight": 2.66,
                      "textTransform": "uppercase",
                    },
                    "pxToRem": [Function],
                    "round": [Function],
                    "subheading": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "lineHeight": "1.5em",
                    },
                    "subtitle1": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1rem",
                      "fontWeight": 400,
                      "letterSpacing": "0.00938em",
                      "lineHeight": 1.75,
                    },
                    "subtitle2": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "0.875rem",
                      "fontWeight": 500,
                      "letterSpacing": "0.00714em",
                      "lineHeight": 1.57,
                    },
                    "title": Object {
                      "color": "rgba(0, 0, 0, 0.87)",
                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                      "fontSize": "1.3125rem",
                      "fontWeight": 500,
                      "lineHeight": "1.16667em",
                    },
                    "useNextVariants": false,
                  },
                  "zIndex": Object {
                    "appBar": 1100,
                    "drawer": 1200,
                    "mobileStepper": 1000,
                    "modal": 1300,
                    "snackbar": 1400,
                    "tooltip": 1500,
                  },
                }
              }
              variant="h5"
            >
              <h1
                className="MuiTypography-root-69 MuiTypography-h5-85"
              />
            </Typography>
          </WithStyles(Typography)>
          <form
            className="Component-form-7"
          >
            <CustomInputControl
              id="firstName"
              label="First Name"
              onChange={[MockFunction]}
            >
              <WithStyles(FormControl)
                fullWidth={true}
                margin="normal"
                required={true}
              >
                <FormControl
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth-108",
                      "marginDense": "MuiFormControl-marginDense-107",
                      "marginNormal": "MuiFormControl-marginNormal-106",
                      "root": "MuiFormControl-root-105",
                    }
                  }
                  component="div"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  margin="normal"
                  required={true}
                  variant="standard"
                >
                  <div
                    className="MuiFormControl-root-105 MuiFormControl-marginNormal-106 MuiFormControl-fullWidth-108"
                  >
                    <WithStyles(WithFormControlContext(InputLabel))
                      htmlFor="firstName"
                    >
                      <WithFormControlContext(InputLabel)
                        classes={
                          Object {
                            "animated": "MuiInputLabel-animated-117",
                            "disabled": "MuiInputLabel-disabled-111",
                            "error": "MuiInputLabel-error-112",
                            "filled": "MuiInputLabel-filled-118",
                            "focused": "MuiInputLabel-focused-110",
                            "formControl": "MuiInputLabel-formControl-114",
                            "marginDense": "MuiInputLabel-marginDense-115",
                            "outlined": "MuiInputLabel-outlined-119",
                            "required": "MuiInputLabel-required-113",
                            "root": "MuiInputLabel-root-109",
                            "shrink": "MuiInputLabel-shrink-116",
                          }
                        }
                        htmlFor="firstName"
                      >
                        <InputLabel
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated-117",
                              "disabled": "MuiInputLabel-disabled-111",
                              "error": "MuiInputLabel-error-112",
                              "filled": "MuiInputLabel-filled-118",
                              "focused": "MuiInputLabel-focused-110",
                              "formControl": "MuiInputLabel-formControl-114",
                              "marginDense": "MuiInputLabel-marginDense-115",
                              "outlined": "MuiInputLabel-outlined-119",
                              "required": "MuiInputLabel-required-113",
                              "root": "MuiInputLabel-root-109",
                              "shrink": "MuiInputLabel-shrink-116",
                            }
                          }
                          disableAnimation={false}
                          htmlFor="firstName"
                          muiFormControl={
                            Object {
                              "adornedStart": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "margin": "normal",
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "required": true,
                              "variant": "standard",
                            }
                          }
                        >
                          <WithStyles(WithFormControlContext(FormLabel))
                            className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                            classes={
                              Object {
                                "disabled": "MuiInputLabel-disabled-111",
                                "error": "MuiInputLabel-error-112",
                                "focused": "MuiInputLabel-focused-110",
                                "required": "MuiInputLabel-required-113",
                              }
                            }
                            data-shrink={false}
                            htmlFor="firstName"
                          >
                            <WithFormControlContext(FormLabel)
                              className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk-126",
                                  "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                  "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                  "filled": "MuiFormLabel-filled-124",
                                  "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                  "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                  "root": "MuiFormLabel-root-120",
                                }
                              }
                              data-shrink={false}
                              htmlFor="firstName"
                            >
                              <FormLabel
                                className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-126",
                                    "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                    "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                    "filled": "MuiFormLabel-filled-124",
                                    "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                    "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                    "root": "MuiFormLabel-root-120",
                                  }
                                }
                                component="label"
                                data-shrink={false}
                                htmlFor="firstName"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": true,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <label
                                  className="MuiFormLabel-root-120 MuiFormLabel-required-125 MuiInputLabel-required-113 MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                  data-shrink={false}
                                  htmlFor="firstName"
                                >
                                  First Name
                                  <span
                                    className="MuiFormLabel-asterisk-126"
                                  >
                                     *
                                  </span>
                                </label>
                              </FormLabel>
                            </WithFormControlContext(FormLabel)>
                          </WithStyles(WithFormControlContext(FormLabel))>
                        </InputLabel>
                      </WithFormControlContext(InputLabel)>
                    </WithStyles(WithFormControlContext(InputLabel))>
                    <WithStyles(Input)
                      id="firstName"
                      label="First Name"
                      name="firstName"
                      onChange={[Function]}
                      optional="undefined"
                      value=""
                    >
                      <Input
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-42",
                            "error": "MuiInput-error-44",
                            "focused": "MuiInput-focused-41",
                            "formControl": "MuiInput-formControl-40",
                            "fullWidth": "MuiInput-fullWidth-46",
                            "input": "MuiInput-input-47",
                            "inputMarginDense": "MuiInput-inputMarginDense-48",
                            "inputMultiline": "MuiInput-inputMultiline-49",
                            "inputType": "MuiInput-inputType-50",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                            "multiline": "MuiInput-multiline-45",
                            "root": "MuiInput-root-39",
                            "underline": "MuiInput-underline-43",
                          }
                        }
                        id="firstName"
                        label="First Name"
                        name="firstName"
                        onChange={[Function]}
                        optional="undefined"
                        value=""
                      >
                        <WithStyles(WithFormControlContext(InputBase))
                          classes={
                            Object {
                              "disabled": "MuiInput-disabled-42",
                              "error": "MuiInput-error-44",
                              "focused": "MuiInput-focused-41",
                              "formControl": "MuiInput-formControl-40",
                              "fullWidth": "MuiInput-fullWidth-46",
                              "input": "MuiInput-input-47",
                              "inputMarginDense": "MuiInput-inputMarginDense-48",
                              "inputMultiline": "MuiInput-inputMultiline-49",
                              "inputType": "MuiInput-inputType-50",
                              "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                              "multiline": "MuiInput-multiline-45",
                              "root": "MuiInput-root-39 MuiInput-underline-43",
                              "underline": null,
                            }
                          }
                          fullWidth={false}
                          id="firstName"
                          inputComponent="input"
                          label="First Name"
                          multiline={false}
                          name="firstName"
                          onChange={[Function]}
                          optional="undefined"
                          type="text"
                          value=""
                        >
                          <WithFormControlContext(InputBase)
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-57",
                                "adornedStart": "MuiInputBase-adornedStart-56",
                                "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                "error": "MuiInputBase-error-58 MuiInput-error-44",
                                "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                "input": "MuiInputBase-input-62 MuiInput-input-47",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                "marginDense": "MuiInputBase-marginDense-59",
                                "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                              }
                            }
                            fullWidth={false}
                            id="firstName"
                            inputComponent="input"
                            label="First Name"
                            multiline={false}
                            name="firstName"
                            onChange={[Function]}
                            optional="undefined"
                            type="text"
                            value=""
                          >
                            <InputBase
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd-57",
                                  "adornedStart": "MuiInputBase-adornedStart-56",
                                  "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                  "error": "MuiInputBase-error-58 MuiInput-error-44",
                                  "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                  "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                  "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                  "input": "MuiInputBase-input-62 MuiInput-input-47",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                  "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                  "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                  "marginDense": "MuiInputBase-marginDense-59",
                                  "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                  "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                                }
                              }
                              fullWidth={false}
                              id="firstName"
                              inputComponent="input"
                              label="First Name"
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": true,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              name="firstName"
                              onChange={[Function]}
                              optional="undefined"
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43 MuiInputBase-formControl-53 MuiInput-formControl-40"
                                label="First Name"
                                onClick={[Function]}
                                optional="undefined"
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input-62 MuiInput-input-47"
                                  disabled={false}
                                  id="firstName"
                                  name="firstName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                              </div>
                            </InputBase>
                          </WithFormControlContext(InputBase)>
                        </WithStyles(WithFormControlContext(InputBase))>
                      </Input>
                    </WithStyles(Input)>
                  </div>
                </FormControl>
              </WithStyles(FormControl)>
            </CustomInputControl>
            <CustomInputControl
              id="lastName"
              label="Last Name"
              onChange={[MockFunction]}
            >
              <WithStyles(FormControl)
                fullWidth={true}
                margin="normal"
                required={true}
              >
                <FormControl
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth-108",
                      "marginDense": "MuiFormControl-marginDense-107",
                      "marginNormal": "MuiFormControl-marginNormal-106",
                      "root": "MuiFormControl-root-105",
                    }
                  }
                  component="div"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  margin="normal"
                  required={true}
                  variant="standard"
                >
                  <div
                    className="MuiFormControl-root-105 MuiFormControl-marginNormal-106 MuiFormControl-fullWidth-108"
                  >
                    <WithStyles(WithFormControlContext(InputLabel))
                      htmlFor="lastName"
                    >
                      <WithFormControlContext(InputLabel)
                        classes={
                          Object {
                            "animated": "MuiInputLabel-animated-117",
                            "disabled": "MuiInputLabel-disabled-111",
                            "error": "MuiInputLabel-error-112",
                            "filled": "MuiInputLabel-filled-118",
                            "focused": "MuiInputLabel-focused-110",
                            "formControl": "MuiInputLabel-formControl-114",
                            "marginDense": "MuiInputLabel-marginDense-115",
                            "outlined": "MuiInputLabel-outlined-119",
                            "required": "MuiInputLabel-required-113",
                            "root": "MuiInputLabel-root-109",
                            "shrink": "MuiInputLabel-shrink-116",
                          }
                        }
                        htmlFor="lastName"
                      >
                        <InputLabel
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated-117",
                              "disabled": "MuiInputLabel-disabled-111",
                              "error": "MuiInputLabel-error-112",
                              "filled": "MuiInputLabel-filled-118",
                              "focused": "MuiInputLabel-focused-110",
                              "formControl": "MuiInputLabel-formControl-114",
                              "marginDense": "MuiInputLabel-marginDense-115",
                              "outlined": "MuiInputLabel-outlined-119",
                              "required": "MuiInputLabel-required-113",
                              "root": "MuiInputLabel-root-109",
                              "shrink": "MuiInputLabel-shrink-116",
                            }
                          }
                          disableAnimation={false}
                          htmlFor="lastName"
                          muiFormControl={
                            Object {
                              "adornedStart": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "margin": "normal",
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "required": true,
                              "variant": "standard",
                            }
                          }
                        >
                          <WithStyles(WithFormControlContext(FormLabel))
                            className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                            classes={
                              Object {
                                "disabled": "MuiInputLabel-disabled-111",
                                "error": "MuiInputLabel-error-112",
                                "focused": "MuiInputLabel-focused-110",
                                "required": "MuiInputLabel-required-113",
                              }
                            }
                            data-shrink={false}
                            htmlFor="lastName"
                          >
                            <WithFormControlContext(FormLabel)
                              className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk-126",
                                  "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                  "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                  "filled": "MuiFormLabel-filled-124",
                                  "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                  "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                  "root": "MuiFormLabel-root-120",
                                }
                              }
                              data-shrink={false}
                              htmlFor="lastName"
                            >
                              <FormLabel
                                className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-126",
                                    "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                    "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                    "filled": "MuiFormLabel-filled-124",
                                    "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                    "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                    "root": "MuiFormLabel-root-120",
                                  }
                                }
                                component="label"
                                data-shrink={false}
                                htmlFor="lastName"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": true,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <label
                                  className="MuiFormLabel-root-120 MuiFormLabel-required-125 MuiInputLabel-required-113 MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                  data-shrink={false}
                                  htmlFor="lastName"
                                >
                                  Last Name
                                  <span
                                    className="MuiFormLabel-asterisk-126"
                                  >
                                     *
                                  </span>
                                </label>
                              </FormLabel>
                            </WithFormControlContext(FormLabel)>
                          </WithStyles(WithFormControlContext(FormLabel))>
                        </InputLabel>
                      </WithFormControlContext(InputLabel)>
                    </WithStyles(WithFormControlContext(InputLabel))>
                    <WithStyles(Input)
                      id="lastName"
                      label="Last Name"
                      name="lastName"
                      onChange={[Function]}
                      optional="undefined"
                      value=""
                    >
                      <Input
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-42",
                            "error": "MuiInput-error-44",
                            "focused": "MuiInput-focused-41",
                            "formControl": "MuiInput-formControl-40",
                            "fullWidth": "MuiInput-fullWidth-46",
                            "input": "MuiInput-input-47",
                            "inputMarginDense": "MuiInput-inputMarginDense-48",
                            "inputMultiline": "MuiInput-inputMultiline-49",
                            "inputType": "MuiInput-inputType-50",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                            "multiline": "MuiInput-multiline-45",
                            "root": "MuiInput-root-39",
                            "underline": "MuiInput-underline-43",
                          }
                        }
                        id="lastName"
                        label="Last Name"
                        name="lastName"
                        onChange={[Function]}
                        optional="undefined"
                        value=""
                      >
                        <WithStyles(WithFormControlContext(InputBase))
                          classes={
                            Object {
                              "disabled": "MuiInput-disabled-42",
                              "error": "MuiInput-error-44",
                              "focused": "MuiInput-focused-41",
                              "formControl": "MuiInput-formControl-40",
                              "fullWidth": "MuiInput-fullWidth-46",
                              "input": "MuiInput-input-47",
                              "inputMarginDense": "MuiInput-inputMarginDense-48",
                              "inputMultiline": "MuiInput-inputMultiline-49",
                              "inputType": "MuiInput-inputType-50",
                              "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                              "multiline": "MuiInput-multiline-45",
                              "root": "MuiInput-root-39 MuiInput-underline-43",
                              "underline": null,
                            }
                          }
                          fullWidth={false}
                          id="lastName"
                          inputComponent="input"
                          label="Last Name"
                          multiline={false}
                          name="lastName"
                          onChange={[Function]}
                          optional="undefined"
                          type="text"
                          value=""
                        >
                          <WithFormControlContext(InputBase)
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-57",
                                "adornedStart": "MuiInputBase-adornedStart-56",
                                "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                "error": "MuiInputBase-error-58 MuiInput-error-44",
                                "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                "input": "MuiInputBase-input-62 MuiInput-input-47",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                "marginDense": "MuiInputBase-marginDense-59",
                                "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                              }
                            }
                            fullWidth={false}
                            id="lastName"
                            inputComponent="input"
                            label="Last Name"
                            multiline={false}
                            name="lastName"
                            onChange={[Function]}
                            optional="undefined"
                            type="text"
                            value=""
                          >
                            <InputBase
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd-57",
                                  "adornedStart": "MuiInputBase-adornedStart-56",
                                  "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                  "error": "MuiInputBase-error-58 MuiInput-error-44",
                                  "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                  "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                  "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                  "input": "MuiInputBase-input-62 MuiInput-input-47",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                  "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                  "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                  "marginDense": "MuiInputBase-marginDense-59",
                                  "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                  "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                                }
                              }
                              fullWidth={false}
                              id="lastName"
                              inputComponent="input"
                              label="Last Name"
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": true,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              name="lastName"
                              onChange={[Function]}
                              optional="undefined"
                              type="text"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43 MuiInputBase-formControl-53 MuiInput-formControl-40"
                                label="Last Name"
                                onClick={[Function]}
                                optional="undefined"
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input-62 MuiInput-input-47"
                                  disabled={false}
                                  id="lastName"
                                  name="lastName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={true}
                                  type="text"
                                  value=""
                                />
                              </div>
                            </InputBase>
                          </WithFormControlContext(InputBase)>
                        </WithStyles(WithFormControlContext(InputBase))>
                      </Input>
                    </WithStyles(Input)>
                  </div>
                </FormControl>
              </WithStyles(FormControl)>
            </CustomInputControl>
            <CustomInputControl
              id="password"
              label="New Password"
              onChange={[MockFunction]}
              optional={true}
              type="password"
            >
              <WithStyles(FormControl)
                fullWidth={true}
                margin="normal"
                required={false}
              >
                <FormControl
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth-108",
                      "marginDense": "MuiFormControl-marginDense-107",
                      "marginNormal": "MuiFormControl-marginNormal-106",
                      "root": "MuiFormControl-root-105",
                    }
                  }
                  component="div"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  margin="normal"
                  required={false}
                  variant="standard"
                >
                  <div
                    className="MuiFormControl-root-105 MuiFormControl-marginNormal-106 MuiFormControl-fullWidth-108"
                  >
                    <WithStyles(WithFormControlContext(InputLabel))
                      htmlFor="password"
                    >
                      <WithFormControlContext(InputLabel)
                        classes={
                          Object {
                            "animated": "MuiInputLabel-animated-117",
                            "disabled": "MuiInputLabel-disabled-111",
                            "error": "MuiInputLabel-error-112",
                            "filled": "MuiInputLabel-filled-118",
                            "focused": "MuiInputLabel-focused-110",
                            "formControl": "MuiInputLabel-formControl-114",
                            "marginDense": "MuiInputLabel-marginDense-115",
                            "outlined": "MuiInputLabel-outlined-119",
                            "required": "MuiInputLabel-required-113",
                            "root": "MuiInputLabel-root-109",
                            "shrink": "MuiInputLabel-shrink-116",
                          }
                        }
                        htmlFor="password"
                      >
                        <InputLabel
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated-117",
                              "disabled": "MuiInputLabel-disabled-111",
                              "error": "MuiInputLabel-error-112",
                              "filled": "MuiInputLabel-filled-118",
                              "focused": "MuiInputLabel-focused-110",
                              "formControl": "MuiInputLabel-formControl-114",
                              "marginDense": "MuiInputLabel-marginDense-115",
                              "outlined": "MuiInputLabel-outlined-119",
                              "required": "MuiInputLabel-required-113",
                              "root": "MuiInputLabel-root-109",
                              "shrink": "MuiInputLabel-shrink-116",
                            }
                          }
                          disableAnimation={false}
                          htmlFor="password"
                          muiFormControl={
                            Object {
                              "adornedStart": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "margin": "normal",
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "required": false,
                              "variant": "standard",
                            }
                          }
                        >
                          <WithStyles(WithFormControlContext(FormLabel))
                            className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                            classes={
                              Object {
                                "disabled": "MuiInputLabel-disabled-111",
                                "error": "MuiInputLabel-error-112",
                                "focused": "MuiInputLabel-focused-110",
                                "required": "MuiInputLabel-required-113",
                              }
                            }
                            data-shrink={false}
                            htmlFor="password"
                          >
                            <WithFormControlContext(FormLabel)
                              className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk-126",
                                  "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                  "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                  "filled": "MuiFormLabel-filled-124",
                                  "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                  "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                  "root": "MuiFormLabel-root-120",
                                }
                              }
                              data-shrink={false}
                              htmlFor="password"
                            >
                              <FormLabel
                                className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-126",
                                    "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                    "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                    "filled": "MuiFormLabel-filled-124",
                                    "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                    "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                    "root": "MuiFormLabel-root-120",
                                  }
                                }
                                component="label"
                                data-shrink={false}
                                htmlFor="password"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <label
                                  className="MuiFormLabel-root-120 MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                  data-shrink={false}
                                  htmlFor="password"
                                >
                                  New Password
                                </label>
                              </FormLabel>
                            </WithFormControlContext(FormLabel)>
                          </WithStyles(WithFormControlContext(FormLabel))>
                        </InputLabel>
                      </WithFormControlContext(InputLabel)>
                    </WithStyles(WithFormControlContext(InputLabel))>
                    <WithStyles(Input)
                      id="password"
                      label="New Password"
                      name="password"
                      onChange={[Function]}
                      optional="true"
                      type="password"
                      value=""
                    >
                      <Input
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-42",
                            "error": "MuiInput-error-44",
                            "focused": "MuiInput-focused-41",
                            "formControl": "MuiInput-formControl-40",
                            "fullWidth": "MuiInput-fullWidth-46",
                            "input": "MuiInput-input-47",
                            "inputMarginDense": "MuiInput-inputMarginDense-48",
                            "inputMultiline": "MuiInput-inputMultiline-49",
                            "inputType": "MuiInput-inputType-50",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                            "multiline": "MuiInput-multiline-45",
                            "root": "MuiInput-root-39",
                            "underline": "MuiInput-underline-43",
                          }
                        }
                        id="password"
                        label="New Password"
                        name="password"
                        onChange={[Function]}
                        optional="true"
                        type="password"
                        value=""
                      >
                        <WithStyles(WithFormControlContext(InputBase))
                          classes={
                            Object {
                              "disabled": "MuiInput-disabled-42",
                              "error": "MuiInput-error-44",
                              "focused": "MuiInput-focused-41",
                              "formControl": "MuiInput-formControl-40",
                              "fullWidth": "MuiInput-fullWidth-46",
                              "input": "MuiInput-input-47",
                              "inputMarginDense": "MuiInput-inputMarginDense-48",
                              "inputMultiline": "MuiInput-inputMultiline-49",
                              "inputType": "MuiInput-inputType-50",
                              "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                              "multiline": "MuiInput-multiline-45",
                              "root": "MuiInput-root-39 MuiInput-underline-43",
                              "underline": null,
                            }
                          }
                          fullWidth={false}
                          id="password"
                          inputComponent="input"
                          label="New Password"
                          multiline={false}
                          name="password"
                          onChange={[Function]}
                          optional="true"
                          type="password"
                          value=""
                        >
                          <WithFormControlContext(InputBase)
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-57",
                                "adornedStart": "MuiInputBase-adornedStart-56",
                                "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                "error": "MuiInputBase-error-58 MuiInput-error-44",
                                "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                "input": "MuiInputBase-input-62 MuiInput-input-47",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                "marginDense": "MuiInputBase-marginDense-59",
                                "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                              }
                            }
                            fullWidth={false}
                            id="password"
                            inputComponent="input"
                            label="New Password"
                            multiline={false}
                            name="password"
                            onChange={[Function]}
                            optional="true"
                            type="password"
                            value=""
                          >
                            <InputBase
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd-57",
                                  "adornedStart": "MuiInputBase-adornedStart-56",
                                  "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                  "error": "MuiInputBase-error-58 MuiInput-error-44",
                                  "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                  "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                  "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                  "input": "MuiInputBase-input-62 MuiInput-input-47",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                  "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                  "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                  "marginDense": "MuiInputBase-marginDense-59",
                                  "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                  "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                                }
                              }
                              fullWidth={false}
                              id="password"
                              inputComponent="input"
                              label="New Password"
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": false,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              name="password"
                              onChange={[Function]}
                              optional="true"
                              type="password"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43 MuiInputBase-formControl-53 MuiInput-formControl-40"
                                label="New Password"
                                onClick={[Function]}
                                optional="true"
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input-62 MuiInput-input-47 MuiInputBase-inputType-65 MuiInput-inputType-50"
                                  disabled={false}
                                  id="password"
                                  name="password"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  type="password"
                                  value=""
                                />
                              </div>
                            </InputBase>
                          </WithFormControlContext(InputBase)>
                        </WithStyles(WithFormControlContext(InputBase))>
                      </Input>
                    </WithStyles(Input)>
                  </div>
                </FormControl>
              </WithStyles(FormControl)>
            </CustomInputControl>
            <CustomInputControl
              id="repeatPassword"
              label="Repeat Password"
              onChange={[MockFunction]}
              optional={true}
              type="password"
            >
              <WithStyles(FormControl)
                fullWidth={true}
                margin="normal"
                required={false}
              >
                <FormControl
                  classes={
                    Object {
                      "fullWidth": "MuiFormControl-fullWidth-108",
                      "marginDense": "MuiFormControl-marginDense-107",
                      "marginNormal": "MuiFormControl-marginNormal-106",
                      "root": "MuiFormControl-root-105",
                    }
                  }
                  component="div"
                  disabled={false}
                  error={false}
                  fullWidth={true}
                  margin="normal"
                  required={false}
                  variant="standard"
                >
                  <div
                    className="MuiFormControl-root-105 MuiFormControl-marginNormal-106 MuiFormControl-fullWidth-108"
                  >
                    <WithStyles(WithFormControlContext(InputLabel))
                      htmlFor="repeatPassword"
                    >
                      <WithFormControlContext(InputLabel)
                        classes={
                          Object {
                            "animated": "MuiInputLabel-animated-117",
                            "disabled": "MuiInputLabel-disabled-111",
                            "error": "MuiInputLabel-error-112",
                            "filled": "MuiInputLabel-filled-118",
                            "focused": "MuiInputLabel-focused-110",
                            "formControl": "MuiInputLabel-formControl-114",
                            "marginDense": "MuiInputLabel-marginDense-115",
                            "outlined": "MuiInputLabel-outlined-119",
                            "required": "MuiInputLabel-required-113",
                            "root": "MuiInputLabel-root-109",
                            "shrink": "MuiInputLabel-shrink-116",
                          }
                        }
                        htmlFor="repeatPassword"
                      >
                        <InputLabel
                          classes={
                            Object {
                              "animated": "MuiInputLabel-animated-117",
                              "disabled": "MuiInputLabel-disabled-111",
                              "error": "MuiInputLabel-error-112",
                              "filled": "MuiInputLabel-filled-118",
                              "focused": "MuiInputLabel-focused-110",
                              "formControl": "MuiInputLabel-formControl-114",
                              "marginDense": "MuiInputLabel-marginDense-115",
                              "outlined": "MuiInputLabel-outlined-119",
                              "required": "MuiInputLabel-required-113",
                              "root": "MuiInputLabel-root-109",
                              "shrink": "MuiInputLabel-shrink-116",
                            }
                          }
                          disableAnimation={false}
                          htmlFor="repeatPassword"
                          muiFormControl={
                            Object {
                              "adornedStart": false,
                              "disabled": false,
                              "error": false,
                              "filled": false,
                              "focused": false,
                              "margin": "normal",
                              "onBlur": [Function],
                              "onEmpty": [Function],
                              "onFilled": [Function],
                              "onFocus": [Function],
                              "required": false,
                              "variant": "standard",
                            }
                          }
                        >
                          <WithStyles(WithFormControlContext(FormLabel))
                            className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                            classes={
                              Object {
                                "disabled": "MuiInputLabel-disabled-111",
                                "error": "MuiInputLabel-error-112",
                                "focused": "MuiInputLabel-focused-110",
                                "required": "MuiInputLabel-required-113",
                              }
                            }
                            data-shrink={false}
                            htmlFor="repeatPassword"
                          >
                            <WithFormControlContext(FormLabel)
                              className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                              classes={
                                Object {
                                  "asterisk": "MuiFormLabel-asterisk-126",
                                  "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                  "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                  "filled": "MuiFormLabel-filled-124",
                                  "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                  "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                  "root": "MuiFormLabel-root-120",
                                }
                              }
                              data-shrink={false}
                              htmlFor="repeatPassword"
                            >
                              <FormLabel
                                className="MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                classes={
                                  Object {
                                    "asterisk": "MuiFormLabel-asterisk-126",
                                    "disabled": "MuiFormLabel-disabled-122 MuiInputLabel-disabled-111",
                                    "error": "MuiFormLabel-error-123 MuiInputLabel-error-112",
                                    "filled": "MuiFormLabel-filled-124",
                                    "focused": "MuiFormLabel-focused-121 MuiInputLabel-focused-110",
                                    "required": "MuiFormLabel-required-125 MuiInputLabel-required-113",
                                    "root": "MuiFormLabel-root-120",
                                  }
                                }
                                component="label"
                                data-shrink={false}
                                htmlFor="repeatPassword"
                                muiFormControl={
                                  Object {
                                    "adornedStart": false,
                                    "disabled": false,
                                    "error": false,
                                    "filled": false,
                                    "focused": false,
                                    "margin": "normal",
                                    "onBlur": [Function],
                                    "onEmpty": [Function],
                                    "onFilled": [Function],
                                    "onFocus": [Function],
                                    "required": false,
                                    "variant": "standard",
                                  }
                                }
                              >
                                <label
                                  className="MuiFormLabel-root-120 MuiInputLabel-root-109 MuiInputLabel-formControl-114 MuiInputLabel-animated-117"
                                  data-shrink={false}
                                  htmlFor="repeatPassword"
                                >
                                  Repeat Password
                                </label>
                              </FormLabel>
                            </WithFormControlContext(FormLabel)>
                          </WithStyles(WithFormControlContext(FormLabel))>
                        </InputLabel>
                      </WithFormControlContext(InputLabel)>
                    </WithStyles(WithFormControlContext(InputLabel))>
                    <WithStyles(Input)
                      id="repeatPassword"
                      label="Repeat Password"
                      name="repeatPassword"
                      onChange={[Function]}
                      optional="true"
                      type="password"
                      value=""
                    >
                      <Input
                        classes={
                          Object {
                            "disabled": "MuiInput-disabled-42",
                            "error": "MuiInput-error-44",
                            "focused": "MuiInput-focused-41",
                            "formControl": "MuiInput-formControl-40",
                            "fullWidth": "MuiInput-fullWidth-46",
                            "input": "MuiInput-input-47",
                            "inputMarginDense": "MuiInput-inputMarginDense-48",
                            "inputMultiline": "MuiInput-inputMultiline-49",
                            "inputType": "MuiInput-inputType-50",
                            "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                            "multiline": "MuiInput-multiline-45",
                            "root": "MuiInput-root-39",
                            "underline": "MuiInput-underline-43",
                          }
                        }
                        id="repeatPassword"
                        label="Repeat Password"
                        name="repeatPassword"
                        onChange={[Function]}
                        optional="true"
                        type="password"
                        value=""
                      >
                        <WithStyles(WithFormControlContext(InputBase))
                          classes={
                            Object {
                              "disabled": "MuiInput-disabled-42",
                              "error": "MuiInput-error-44",
                              "focused": "MuiInput-focused-41",
                              "formControl": "MuiInput-formControl-40",
                              "fullWidth": "MuiInput-fullWidth-46",
                              "input": "MuiInput-input-47",
                              "inputMarginDense": "MuiInput-inputMarginDense-48",
                              "inputMultiline": "MuiInput-inputMultiline-49",
                              "inputType": "MuiInput-inputType-50",
                              "inputTypeSearch": "MuiInput-inputTypeSearch-51",
                              "multiline": "MuiInput-multiline-45",
                              "root": "MuiInput-root-39 MuiInput-underline-43",
                              "underline": null,
                            }
                          }
                          fullWidth={false}
                          id="repeatPassword"
                          inputComponent="input"
                          label="Repeat Password"
                          multiline={false}
                          name="repeatPassword"
                          onChange={[Function]}
                          optional="true"
                          type="password"
                          value=""
                        >
                          <WithFormControlContext(InputBase)
                            classes={
                              Object {
                                "adornedEnd": "MuiInputBase-adornedEnd-57",
                                "adornedStart": "MuiInputBase-adornedStart-56",
                                "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                "error": "MuiInputBase-error-58 MuiInput-error-44",
                                "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                "input": "MuiInputBase-input-62 MuiInput-input-47",
                                "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                "marginDense": "MuiInputBase-marginDense-59",
                                "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                              }
                            }
                            fullWidth={false}
                            id="repeatPassword"
                            inputComponent="input"
                            label="Repeat Password"
                            multiline={false}
                            name="repeatPassword"
                            onChange={[Function]}
                            optional="true"
                            type="password"
                            value=""
                          >
                            <InputBase
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd-57",
                                  "adornedStart": "MuiInputBase-adornedStart-56",
                                  "disabled": "MuiInputBase-disabled-55 MuiInput-disabled-42",
                                  "error": "MuiInputBase-error-58 MuiInput-error-44",
                                  "focused": "MuiInputBase-focused-54 MuiInput-focused-41",
                                  "formControl": "MuiInputBase-formControl-53 MuiInput-formControl-40",
                                  "fullWidth": "MuiInputBase-fullWidth-61 MuiInput-fullWidth-46",
                                  "input": "MuiInputBase-input-62 MuiInput-input-47",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-68",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart-67",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense-63 MuiInput-inputMarginDense-48",
                                  "inputMultiline": "MuiInputBase-inputMultiline-64 MuiInput-inputMultiline-49",
                                  "inputType": "MuiInputBase-inputType-65 MuiInput-inputType-50",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch-66 MuiInput-inputTypeSearch-51",
                                  "marginDense": "MuiInputBase-marginDense-59",
                                  "multiline": "MuiInputBase-multiline-60 MuiInput-multiline-45",
                                  "root": "MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43",
                                }
                              }
                              fullWidth={false}
                              id="repeatPassword"
                              inputComponent="input"
                              label="Repeat Password"
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": false,
                                  "variant": "standard",
                                }
                              }
                              multiline={false}
                              name="repeatPassword"
                              onChange={[Function]}
                              optional="true"
                              type="password"
                              value=""
                            >
                              <div
                                className="MuiInputBase-root-52 MuiInput-root-39 MuiInput-underline-43 MuiInputBase-formControl-53 MuiInput-formControl-40"
                                label="Repeat Password"
                                onClick={[Function]}
                                optional="true"
                              >
                                <input
                                  aria-invalid={false}
                                  className="MuiInputBase-input-62 MuiInput-input-47 MuiInputBase-inputType-65 MuiInput-inputType-50"
                                  disabled={false}
                                  id="repeatPassword"
                                  name="repeatPassword"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  required={false}
                                  type="password"
                                  value=""
                                />
                              </div>
                            </InputBase>
                          </WithFormControlContext(InputBase)>
                        </WithStyles(WithFormControlContext(InputBase))>
                      </Input>
                    </WithStyles(Input)>
                  </div>
                </FormControl>
              </WithStyles(FormControl)>
            </CustomInputControl>
            <Link
              className="Component-link-4"
              replace={false}
              to="/"
            >
              <a
                className="Component-link-4"
                href="/"
                onClick={[Function]}
              >
                <WithStyles(Button)
                  className="Component-submit-8"
                  color="primary"
                  fullWidth={true}
                  id="submitButton"
                  onClick={[Function]}
                  variant="contained"
                >
                  <Button
                    className="Component-submit-8"
                    classes={
                      Object {
                        "colorInherit": "MuiButton-colorInherit-148",
                        "contained": "MuiButton-contained-138",
                        "containedPrimary": "MuiButton-containedPrimary-139",
                        "containedSecondary": "MuiButton-containedSecondary-140",
                        "disabled": "MuiButton-disabled-147",
                        "extendedFab": "MuiButton-extendedFab-145",
                        "fab": "MuiButton-fab-144",
                        "flat": "MuiButton-flat-132",
                        "flatPrimary": "MuiButton-flatPrimary-133",
                        "flatSecondary": "MuiButton-flatSecondary-134",
                        "focusVisible": "MuiButton-focusVisible-146",
                        "fullWidth": "MuiButton-fullWidth-152",
                        "label": "MuiButton-label-128",
                        "mini": "MuiButton-mini-149",
                        "outlined": "MuiButton-outlined-135",
                        "outlinedPrimary": "MuiButton-outlinedPrimary-136",
                        "outlinedSecondary": "MuiButton-outlinedSecondary-137",
                        "raised": "MuiButton-raised-141",
                        "raisedPrimary": "MuiButton-raisedPrimary-142",
                        "raisedSecondary": "MuiButton-raisedSecondary-143",
                        "root": "MuiButton-root-127",
                        "sizeLarge": "MuiButton-sizeLarge-151",
                        "sizeSmall": "MuiButton-sizeSmall-150",
                        "text": "MuiButton-text-129",
                        "textPrimary": "MuiButton-textPrimary-130",
                        "textSecondary": "MuiButton-textSecondary-131",
                      }
                    }
                    color="primary"
                    component="button"
                    disableFocusRipple={false}
                    disabled={false}
                    fullWidth={true}
                    id="submitButton"
                    mini={false}
                    onClick={[Function]}
                    size="medium"
                    type="button"
                    variant="contained"
                  >
                    <WithStyles(ButtonBase)
                      className="MuiButton-root-127 MuiButton-contained-138 MuiButton-containedPrimary-139 MuiButton-raised-141 MuiButton-raisedPrimary-142 MuiButton-fullWidth-152 Component-submit-8"
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="MuiButton-focusVisible-146"
                      id="submitButton"
                      onClick={[Function]}
                      type="button"
                    >
                      <ButtonBase
                        centerRipple={false}
                        className="MuiButton-root-127 MuiButton-contained-138 MuiButton-containedPrimary-139 MuiButton-raised-141 MuiButton-raisedPrimary-142 MuiButton-fullWidth-152 Component-submit-8"
                        classes={
                          Object {
                            "disabled": "MuiButtonBase-disabled-154",
                            "focusVisible": "MuiButtonBase-focusVisible-155",
                            "root": "MuiButtonBase-root-153",
                          }
                        }
                        component="button"
                        disableRipple={false}
                        disableTouchRipple={false}
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="MuiButton-focusVisible-146"
                        id="submitButton"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <button
                          className="MuiButtonBase-root-153 MuiButton-root-127 MuiButton-contained-138 MuiButton-containedPrimary-139 MuiButton-raised-141 MuiButton-raisedPrimary-142 MuiButton-fullWidth-152 Component-submit-8"
                          disabled={false}
                          id="submitButton"
                          onBlur={[Function]}
                          onClick={[Function]}
                          onContextMenu={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="MuiButton-label-128"
                          >
                            Submit
                          </span>
                          <NoSsr
                            defer={false}
                            fallback={null}
                          >
                            <WithStyles(TouchRipple)
                              center={false}
                              innerRef={[Function]}
                            >
                              <TouchRipple
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child-160",
                                    "childLeaving": "MuiTouchRipple-childLeaving-161",
                                    "childPulsate": "MuiTouchRipple-childPulsate-162",
                                    "ripple": "MuiTouchRipple-ripple-157",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-159",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible-158",
                                    "root": "MuiTouchRipple-root-156",
                                  }
                                }
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  className="MuiTouchRipple-root-156"
                                  component="span"
                                  enter={true}
                                  exit={true}
                                >
                                  <span
                                    className="MuiTouchRipple-root-156"
                                  />
                                </TransitionGroup>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </a>
            </Link>
            <Link
              className="Component-link-4"
              replace={false}
              to="/"
            >
              <a
                className="Component-link-4"
                href="/"
                onClick={[Function]}
              >
                <WithStyles(Button)
                  className="Component-submit-8"
                  color="secondary"
                  fullWidth={true}
                  variant="contained"
                >
                  <Button
                    className="Component-submit-8"
                    classes={
                      Object {
                        "colorInherit": "MuiButton-colorInherit-148",
                        "contained": "MuiButton-contained-138",
                        "containedPrimary": "MuiButton-containedPrimary-139",
                        "containedSecondary": "MuiButton-containedSecondary-140",
                        "disabled": "MuiButton-disabled-147",
                        "extendedFab": "MuiButton-extendedFab-145",
                        "fab": "MuiButton-fab-144",
                        "flat": "MuiButton-flat-132",
                        "flatPrimary": "MuiButton-flatPrimary-133",
                        "flatSecondary": "MuiButton-flatSecondary-134",
                        "focusVisible": "MuiButton-focusVisible-146",
                        "fullWidth": "MuiButton-fullWidth-152",
                        "label": "MuiButton-label-128",
                        "mini": "MuiButton-mini-149",
                        "outlined": "MuiButton-outlined-135",
                        "outlinedPrimary": "MuiButton-outlinedPrimary-136",
                        "outlinedSecondary": "MuiButton-outlinedSecondary-137",
                        "raised": "MuiButton-raised-141",
                        "raisedPrimary": "MuiButton-raisedPrimary-142",
                        "raisedSecondary": "MuiButton-raisedSecondary-143",
                        "root": "MuiButton-root-127",
                        "sizeLarge": "MuiButton-sizeLarge-151",
                        "sizeSmall": "MuiButton-sizeSmall-150",
                        "text": "MuiButton-text-129",
                        "textPrimary": "MuiButton-textPrimary-130",
                        "textSecondary": "MuiButton-textSecondary-131",
                      }
                    }
                    color="secondary"
                    component="button"
                    disableFocusRipple={false}
                    disabled={false}
                    fullWidth={true}
                    mini={false}
                    size="medium"
                    type="button"
                    variant="contained"
                  >
                    <WithStyles(ButtonBase)
                      className="MuiButton-root-127 MuiButton-contained-138 MuiButton-containedSecondary-140 MuiButton-raised-141 MuiButton-raisedSecondary-143 MuiButton-fullWidth-152 Component-submit-8"
                      component="button"
                      disabled={false}
                      focusRipple={true}
                      focusVisibleClassName="MuiButton-focusVisible-146"
                      type="button"
                    >
                      <ButtonBase
                        centerRipple={false}
                        className="MuiButton-root-127 MuiButton-contained-138 MuiButton-containedSecondary-140 MuiButton-raised-141 MuiButton-raisedSecondary-143 MuiButton-fullWidth-152 Component-submit-8"
                        classes={
                          Object {
                            "disabled": "MuiButtonBase-disabled-154",
                            "focusVisible": "MuiButtonBase-focusVisible-155",
                            "root": "MuiButtonBase-root-153",
                          }
                        }
                        component="button"
                        disableRipple={false}
                        disableTouchRipple={false}
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="MuiButton-focusVisible-146"
                        tabIndex="0"
                        type="button"
                      >
                        <button
                          className="MuiButtonBase-root-153 MuiButton-root-127 MuiButton-contained-138 MuiButton-containedSecondary-140 MuiButton-raised-141 MuiButton-raisedSecondary-143 MuiButton-fullWidth-152 Component-submit-8"
                          disabled={false}
                          onBlur={[Function]}
                          onContextMenu={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="MuiButton-label-128"
                          >
                            Cancel
                          </span>
                          <NoSsr
                            defer={false}
                            fallback={null}
                          >
                            <WithStyles(TouchRipple)
                              center={false}
                              innerRef={[Function]}
                            >
                              <TouchRipple
                                center={false}
                                classes={
                                  Object {
                                    "child": "MuiTouchRipple-child-160",
                                    "childLeaving": "MuiTouchRipple-childLeaving-161",
                                    "childPulsate": "MuiTouchRipple-childPulsate-162",
                                    "ripple": "MuiTouchRipple-ripple-157",
                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-159",
                                    "rippleVisible": "MuiTouchRipple-rippleVisible-158",
                                    "root": "MuiTouchRipple-root-156",
                                  }
                                }
                              >
                                <TransitionGroup
                                  childFactory={[Function]}
                                  className="MuiTouchRipple-root-156"
                                  component="span"
                                  enter={true}
                                  exit={true}
                                >
                                  <span
                                    className="MuiTouchRipple-root-156"
                                  />
                                </TransitionGroup>
                              </TouchRipple>
                            </WithStyles(TouchRipple)>
                          </NoSsr>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </a>
            </Link>
          </form>
        </div>
      </Paper>
    </WithStyles(Paper)>
  </main>
</_ProfileForm>
`;

exports[`<_ProfileForm /> render() when logged in, shows profile form filled in with userProfileForm data 1`] = `null`;

exports[`<_ProfileForm /> render() when logged out, redirects to signin 1`] = `null`;
