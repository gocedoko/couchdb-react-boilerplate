// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<_SignInForm /> render() when logged in, redirects to home 1`] = `
<Redirect
  push={false}
  to="/"
/>
`;

exports[`<_SignInForm /> render() when logged out, renders succesfully 1`] = `ReactWrapper {}`;

exports[`<_SignInForm /> render() when not logged in, shows empty sign in form 1`] = `
<WithStyles(Component)
  signIn={[MockFunction]}
  signInForm={Object {}}
  signedIn={false}
  updateFormField={[MockFunction]}
>
  <Component
    classes={
      Object {
        "avatar": "Component-avatar-3",
        "bigAvatar": "Component-bigAvatar-6",
        "form": "Component-form-7",
        "hidden": "Component-hidden-5",
        "link": "Component-link-4",
        "main": "Component-main-1",
        "paper": "Component-paper-2",
        "submit": "Component-submit-8",
      }
    }
    signIn={[MockFunction]}
    signInForm={Object {}}
    signedIn={false}
    updateFormField={[MockFunction]}
  >
    <MemoryRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "frnc1m",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "frnc1m",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <_SignInForm
          classes={
            Object {
              "avatar": "Component-avatar-3",
              "bigAvatar": "Component-bigAvatar-6",
              "form": "Component-form-7",
              "hidden": "Component-hidden-5",
              "link": "Component-link-4",
              "main": "Component-main-1",
              "paper": "Component-paper-2",
              "submit": "Component-submit-8",
            }
          }
          signIn={[MockFunction]}
          signInForm={Object {}}
          signedIn={false}
          updateFormField={[MockFunction]}
        >
          <main
            className="Component-main-1"
          >
            <WithStyles(Paper)
              className="Component-paper-2"
            >
              <Paper
                className="Component-paper-2"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0-174",
                    "elevation1": "MuiPaper-elevation1-175",
                    "elevation10": "MuiPaper-elevation10-184",
                    "elevation11": "MuiPaper-elevation11-185",
                    "elevation12": "MuiPaper-elevation12-186",
                    "elevation13": "MuiPaper-elevation13-187",
                    "elevation14": "MuiPaper-elevation14-188",
                    "elevation15": "MuiPaper-elevation15-189",
                    "elevation16": "MuiPaper-elevation16-190",
                    "elevation17": "MuiPaper-elevation17-191",
                    "elevation18": "MuiPaper-elevation18-192",
                    "elevation19": "MuiPaper-elevation19-193",
                    "elevation2": "MuiPaper-elevation2-176",
                    "elevation20": "MuiPaper-elevation20-194",
                    "elevation21": "MuiPaper-elevation21-195",
                    "elevation22": "MuiPaper-elevation22-196",
                    "elevation23": "MuiPaper-elevation23-197",
                    "elevation24": "MuiPaper-elevation24-198",
                    "elevation3": "MuiPaper-elevation3-177",
                    "elevation4": "MuiPaper-elevation4-178",
                    "elevation5": "MuiPaper-elevation5-179",
                    "elevation6": "MuiPaper-elevation6-180",
                    "elevation7": "MuiPaper-elevation7-181",
                    "elevation8": "MuiPaper-elevation8-182",
                    "elevation9": "MuiPaper-elevation9-183",
                    "root": "MuiPaper-root-172",
                    "rounded": "MuiPaper-rounded-173",
                  }
                }
                component="div"
                elevation={2}
                square={false}
              >
                <div
                  className="MuiPaper-root-172 MuiPaper-elevation2-176 MuiPaper-rounded-173 Component-paper-2"
                >
                  <WithStyles(Avatar)
                    className="Component-avatar-3"
                  >
                    <Avatar
                      className="Component-avatar-3"
                      classes={
                        Object {
                          "colorDefault": "MuiAvatar-colorDefault-200",
                          "img": "MuiAvatar-img-201",
                          "root": "MuiAvatar-root-199",
                        }
                      }
                      component="div"
                    >
                      <div
                        className="MuiAvatar-root-199 MuiAvatar-colorDefault-200 Component-avatar-3"
                      >
                        <pure(LockOutlinedIcon)>
                          <LockOutlinedIcon>
                            <WithStyles(SvgIcon)>
                              <SvgIcon
                                classes={
                                  Object {
                                    "colorAction": "MuiSvgIcon-colorAction-205",
                                    "colorDisabled": "MuiSvgIcon-colorDisabled-207",
                                    "colorError": "MuiSvgIcon-colorError-206",
                                    "colorPrimary": "MuiSvgIcon-colorPrimary-203",
                                    "colorSecondary": "MuiSvgIcon-colorSecondary-204",
                                    "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-208",
                                    "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-210",
                                    "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-209",
                                    "root": "MuiSvgIcon-root-202",
                                  }
                                }
                                color="inherit"
                                component="svg"
                                fontSize="default"
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-202"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <g
                                    fill="none"
                                  >
                                    <path
                                      d="M0 0h24v24H0V0z"
                                    />
                                    <path
                                      d="M0 0h24v24H0V0z"
                                      opacity=".87"
                                    />
                                  </g>
                                  <path
                                    d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zM9 6c0-1.66 1.34-3 3-3s3 1.34 3 3v2H9V6zm9 14H6V10h12v10zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"
                                  />
                                </svg>
                              </SvgIcon>
                            </WithStyles(SvgIcon)>
                          </LockOutlinedIcon>
                        </pure(LockOutlinedIcon)>
                      </div>
                    </Avatar>
                  </WithStyles(Avatar)>
                  <WithStyles(Typography)
                    component="h1"
                    variant="h5"
                  >
                    <Typography
                      align="inherit"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter-234",
                          "alignJustify": "MuiTypography-alignJustify-236",
                          "alignLeft": "MuiTypography-alignLeft-233",
                          "alignRight": "MuiTypography-alignRight-235",
                          "body1": "MuiTypography-body1-220",
                          "body2": "MuiTypography-body2-219",
                          "button": "MuiTypography-button-222",
                          "caption": "MuiTypography-caption-221",
                          "colorError": "MuiTypography-colorError-245",
                          "colorInherit": "MuiTypography-colorInherit-240",
                          "colorPrimary": "MuiTypography-colorPrimary-241",
                          "colorSecondary": "MuiTypography-colorSecondary-242",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary-243",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary-244",
                          "display1": "MuiTypography-display1-215",
                          "display2": "MuiTypography-display2-214",
                          "display3": "MuiTypography-display3-213",
                          "display4": "MuiTypography-display4-212",
                          "gutterBottom": "MuiTypography-gutterBottom-238",
                          "h1": "MuiTypography-h1-223",
                          "h2": "MuiTypography-h2-224",
                          "h3": "MuiTypography-h3-225",
                          "h4": "MuiTypography-h4-226",
                          "h5": "MuiTypography-h5-227",
                          "h6": "MuiTypography-h6-228",
                          "headline": "MuiTypography-headline-216",
                          "inline": "MuiTypography-inline-246",
                          "noWrap": "MuiTypography-noWrap-237",
                          "overline": "MuiTypography-overline-231",
                          "paragraph": "MuiTypography-paragraph-239",
                          "root": "MuiTypography-root-211",
                          "srOnly": "MuiTypography-srOnly-232",
                          "subheading": "MuiTypography-subheading-218",
                          "subtitle1": "MuiTypography-subtitle1-229",
                          "subtitle2": "MuiTypography-subtitle2-230",
                          "title": "MuiTypography-title-217",
                        }
                      }
                      color="default"
                      component="h1"
                      gutterBottom={false}
                      headlineMapping={
                        Object {
                          "body1": "p",
                          "body2": "p",
                          "display1": "h1",
                          "display2": "h1",
                          "display3": "h1",
                          "display4": "h1",
                          "h1": "h1",
                          "h2": "h2",
                          "h3": "h3",
                          "h4": "h4",
                          "h5": "h5",
                          "h6": "h6",
                          "headline": "h1",
                          "subheading": "h3",
                          "subtitle1": "h6",
                          "subtitle2": "h6",
                          "title": "h2",
                        }
                      }
                      inline={false}
                      noWrap={false}
                      paragraph={false}
                      theme={
                        Object {
                          "breakpoints": Object {
                            "between": [Function],
                            "down": [Function],
                            "keys": Array [
                              "xs",
                              "sm",
                              "md",
                              "lg",
                              "xl",
                            ],
                            "only": [Function],
                            "up": [Function],
                            "values": Object {
                              "lg": 1280,
                              "md": 960,
                              "sm": 600,
                              "xl": 1920,
                              "xs": 0,
                            },
                            "width": [Function],
                          },
                          "direction": "ltr",
                          "mixins": Object {
                            "gutters": [Function],
                            "toolbar": Object {
                              "@media (min-width:0px) and (orientation: landscape)": Object {
                                "minHeight": 48,
                              },
                              "@media (min-width:600px)": Object {
                                "minHeight": 64,
                              },
                              "minHeight": 56,
                            },
                          },
                          "overrides": Object {},
                          "palette": Object {
                            "action": Object {
                              "active": "rgba(0, 0, 0, 0.54)",
                              "disabled": "rgba(0, 0, 0, 0.26)",
                              "disabledBackground": "rgba(0, 0, 0, 0.12)",
                              "hover": "rgba(0, 0, 0, 0.08)",
                              "hoverOpacity": 0.08,
                              "selected": "rgba(0, 0, 0, 0.14)",
                            },
                            "augmentColor": [Function],
                            "background": Object {
                              "default": "#fafafa",
                              "paper": "#fff",
                            },
                            "common": Object {
                              "black": "#000",
                              "white": "#fff",
                            },
                            "contrastThreshold": 3,
                            "divider": "rgba(0, 0, 0, 0.12)",
                            "error": Object {
                              "contrastText": "#fff",
                              "dark": "#d32f2f",
                              "light": "#e57373",
                              "main": "#f44336",
                            },
                            "getContrastText": [Function],
                            "grey": Object {
                              "100": "#f5f5f5",
                              "200": "#eeeeee",
                              "300": "#e0e0e0",
                              "400": "#bdbdbd",
                              "50": "#fafafa",
                              "500": "#9e9e9e",
                              "600": "#757575",
                              "700": "#616161",
                              "800": "#424242",
                              "900": "#212121",
                              "A100": "#d5d5d5",
                              "A200": "#aaaaaa",
                              "A400": "#303030",
                              "A700": "#616161",
                            },
                            "primary": Object {
                              "contrastText": "#fff",
                              "dark": "#303f9f",
                              "light": "#7986cb",
                              "main": "#3f51b5",
                            },
                            "secondary": Object {
                              "contrastText": "#fff",
                              "dark": "#c51162",
                              "light": "#ff4081",
                              "main": "#f50057",
                            },
                            "text": Object {
                              "disabled": "rgba(0, 0, 0, 0.38)",
                              "hint": "rgba(0, 0, 0, 0.38)",
                              "primary": "rgba(0, 0, 0, 0.87)",
                              "secondary": "rgba(0, 0, 0, 0.54)",
                            },
                            "tonalOffset": 0.2,
                            "type": "light",
                          },
                          "props": Object {},
                          "shadows": Array [
                            "none",
                            "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                            "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                            "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                            "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                            "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                            "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                            "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                            "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                            "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                            "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                            "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                            "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                            "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                            "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                            "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                            "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                            "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                            "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                            "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                            "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                            "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                          ],
                          "shape": Object {
                            "borderRadius": 4,
                          },
                          "spacing": Object {
                            "unit": 8,
                          },
                          "transitions": Object {
                            "create": [Function],
                            "duration": Object {
                              "complex": 375,
                              "enteringScreen": 225,
                              "leavingScreen": 195,
                              "short": 250,
                              "shorter": 200,
                              "shortest": 150,
                              "standard": 300,
                            },
                            "easing": Object {
                              "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                              "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                              "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                              "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                            },
                            "getAutoHeightDuration": [Function],
                          },
                          "typography": Object {
                            "body1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "lineHeight": "1.46429em",
                            },
                            "body1Next": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.5,
                            },
                            "body2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "lineHeight": "1.71429em",
                            },
                            "body2Next": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.01071em",
                              "lineHeight": 1.5,
                            },
                            "button": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "textTransform": "uppercase",
                            },
                            "buttonNext": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.02857em",
                              "lineHeight": 1.75,
                              "textTransform": "uppercase",
                            },
                            "caption": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "lineHeight": "1.375em",
                            },
                            "captionNext": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.03333em",
                              "lineHeight": 1.66,
                            },
                            "display1": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "lineHeight": "1.20588em",
                            },
                            "display2": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.8125rem",
                              "fontWeight": 400,
                              "lineHeight": "1.13333em",
                              "marginLeft": "-.02em",
                            },
                            "display3": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "-.02em",
                              "lineHeight": "1.30357em",
                              "marginLeft": "-.02em",
                            },
                            "display4": Object {
                              "color": "rgba(0, 0, 0, 0.54)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "7rem",
                              "fontWeight": 300,
                              "letterSpacing": "-.04em",
                              "lineHeight": "1.14286em",
                              "marginLeft": "-.04em",
                            },
                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                            "fontSize": 14,
                            "fontWeightLight": 300,
                            "fontWeightMedium": 500,
                            "fontWeightRegular": 400,
                            "h1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "6rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.01562em",
                              "lineHeight": 1,
                            },
                            "h2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3.75rem",
                              "fontWeight": 300,
                              "letterSpacing": "-0.00833em",
                              "lineHeight": 1,
                            },
                            "h3": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "3rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.04,
                            },
                            "h4": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "2.125rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00735em",
                              "lineHeight": 1.17,
                            },
                            "h5": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "letterSpacing": "0em",
                              "lineHeight": 1.33,
                            },
                            "h6": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.25rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.0075em",
                              "lineHeight": 1.6,
                            },
                            "headline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.5rem",
                              "fontWeight": 400,
                              "lineHeight": "1.35417em",
                            },
                            "overline": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.75rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.08333em",
                              "lineHeight": 2.66,
                              "textTransform": "uppercase",
                            },
                            "pxToRem": [Function],
                            "round": [Function],
                            "subheading": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "lineHeight": "1.5em",
                            },
                            "subtitle1": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1rem",
                              "fontWeight": 400,
                              "letterSpacing": "0.00938em",
                              "lineHeight": 1.75,
                            },
                            "subtitle2": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "0.875rem",
                              "fontWeight": 500,
                              "letterSpacing": "0.00714em",
                              "lineHeight": 1.57,
                            },
                            "title": Object {
                              "color": "rgba(0, 0, 0, 0.87)",
                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                              "fontSize": "1.3125rem",
                              "fontWeight": 500,
                              "lineHeight": "1.16667em",
                            },
                            "useNextVariants": false,
                          },
                          "zIndex": Object {
                            "appBar": 1100,
                            "drawer": 1200,
                            "mobileStepper": 1000,
                            "modal": 1300,
                            "snackbar": 1400,
                            "tooltip": 1500,
                          },
                        }
                      }
                      variant="h5"
                    >
                      <h1
                        className="MuiTypography-root-211 MuiTypography-h5-227"
                      >
                        Sign in
                      </h1>
                    </Typography>
                  </WithStyles(Typography)>
                  <form
                    className="Component-form-7"
                  >
                    <input
                      type="hidden"
                      value="just a dummy because of a chrome bug"
                    />
                    <Component
                      autoFocus={true}
                      form="signInForm"
                      id="username"
                      label="Username"
                    >
                      <CustomInputControl
                        autoFocus={true}
                        form="signInForm"
                        id="username"
                        label="Username"
                        onChange={[MockFunction]}
                      >
                        <WithStyles(FormControl)
                          fullWidth={true}
                          margin="normal"
                          required={true}
                        >
                          <FormControl
                            classes={
                              Object {
                                "fullWidth": "MuiFormControl-fullWidth-250",
                                "marginDense": "MuiFormControl-marginDense-249",
                                "marginNormal": "MuiFormControl-marginNormal-248",
                                "root": "MuiFormControl-root-247",
                              }
                            }
                            component="div"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            margin="normal"
                            required={true}
                            variant="standard"
                          >
                            <div
                              className="MuiFormControl-root-247 MuiFormControl-marginNormal-248 MuiFormControl-fullWidth-250"
                            >
                              <WithStyles(WithFormControlContext(InputLabel))
                                htmlFor="username"
                              >
                                <WithFormControlContext(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-259",
                                      "disabled": "MuiInputLabel-disabled-253",
                                      "error": "MuiInputLabel-error-254",
                                      "filled": "MuiInputLabel-filled-260",
                                      "focused": "MuiInputLabel-focused-252",
                                      "formControl": "MuiInputLabel-formControl-256",
                                      "marginDense": "MuiInputLabel-marginDense-257",
                                      "outlined": "MuiInputLabel-outlined-261",
                                      "required": "MuiInputLabel-required-255",
                                      "root": "MuiInputLabel-root-251",
                                      "shrink": "MuiInputLabel-shrink-258",
                                    }
                                  }
                                  htmlFor="username"
                                >
                                  <InputLabel
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-259",
                                        "disabled": "MuiInputLabel-disabled-253",
                                        "error": "MuiInputLabel-error-254",
                                        "filled": "MuiInputLabel-filled-260",
                                        "focused": "MuiInputLabel-focused-252",
                                        "formControl": "MuiInputLabel-formControl-256",
                                        "marginDense": "MuiInputLabel-marginDense-257",
                                        "outlined": "MuiInputLabel-outlined-261",
                                        "required": "MuiInputLabel-required-255",
                                        "root": "MuiInputLabel-root-251",
                                        "shrink": "MuiInputLabel-shrink-258",
                                      }
                                    }
                                    disableAnimation={false}
                                    htmlFor="username"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": true,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": true,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <WithStyles(WithFormControlContext(FormLabel))
                                      className="MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259 MuiInputLabel-shrink-258"
                                      classes={
                                        Object {
                                          "disabled": "MuiInputLabel-disabled-253",
                                          "error": "MuiInputLabel-error-254",
                                          "focused": "MuiInputLabel-focused-252",
                                          "required": "MuiInputLabel-required-255",
                                        }
                                      }
                                      data-shrink={true}
                                      htmlFor="username"
                                    >
                                      <WithFormControlContext(FormLabel)
                                        className="MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259 MuiInputLabel-shrink-258"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-268",
                                            "disabled": "MuiFormLabel-disabled-264 MuiInputLabel-disabled-253",
                                            "error": "MuiFormLabel-error-265 MuiInputLabel-error-254",
                                            "filled": "MuiFormLabel-filled-266",
                                            "focused": "MuiFormLabel-focused-263 MuiInputLabel-focused-252",
                                            "required": "MuiFormLabel-required-267 MuiInputLabel-required-255",
                                            "root": "MuiFormLabel-root-262",
                                          }
                                        }
                                        data-shrink={true}
                                        htmlFor="username"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259 MuiInputLabel-shrink-258"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-268",
                                              "disabled": "MuiFormLabel-disabled-264 MuiInputLabel-disabled-253",
                                              "error": "MuiFormLabel-error-265 MuiInputLabel-error-254",
                                              "filled": "MuiFormLabel-filled-266",
                                              "focused": "MuiFormLabel-focused-263 MuiInputLabel-focused-252",
                                              "required": "MuiFormLabel-required-267 MuiInputLabel-required-255",
                                              "root": "MuiFormLabel-root-262",
                                            }
                                          }
                                          component="label"
                                          data-shrink={true}
                                          htmlFor="username"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": true,
                                              "margin": "normal",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": true,
                                              "variant": "standard",
                                            }
                                          }
                                        >
                                          <label
                                            className="MuiFormLabel-root-262 MuiFormLabel-focused-263 MuiInputLabel-focused-252 MuiFormLabel-required-267 MuiInputLabel-required-255 MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259 MuiInputLabel-shrink-258"
                                            data-shrink={true}
                                            htmlFor="username"
                                          >
                                            Username
                                            <span
                                              className="MuiFormLabel-asterisk-268"
                                            >
                                               *
                                            </span>
                                          </label>
                                        </FormLabel>
                                      </WithFormControlContext(FormLabel)>
                                    </WithStyles(WithFormControlContext(FormLabel))>
                                  </InputLabel>
                                </WithFormControlContext(InputLabel)>
                              </WithStyles(WithFormControlContext(InputLabel))>
                              <WithStyles(Input)
                                autoFocus={true}
                                form="signInForm"
                                id="username"
                                label="Username"
                                name="username"
                                onChange={[Function]}
                                optional="undefined"
                              >
                                <Input
                                  autoFocus={true}
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-272",
                                      "error": "MuiInput-error-274",
                                      "focused": "MuiInput-focused-271",
                                      "formControl": "MuiInput-formControl-270",
                                      "fullWidth": "MuiInput-fullWidth-276",
                                      "input": "MuiInput-input-277",
                                      "inputMarginDense": "MuiInput-inputMarginDense-278",
                                      "inputMultiline": "MuiInput-inputMultiline-279",
                                      "inputType": "MuiInput-inputType-280",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-281",
                                      "multiline": "MuiInput-multiline-275",
                                      "root": "MuiInput-root-269",
                                      "underline": "MuiInput-underline-273",
                                    }
                                  }
                                  form="signInForm"
                                  id="username"
                                  label="Username"
                                  name="username"
                                  onChange={[Function]}
                                  optional="undefined"
                                >
                                  <WithStyles(WithFormControlContext(InputBase))
                                    autoFocus={true}
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-272",
                                        "error": "MuiInput-error-274",
                                        "focused": "MuiInput-focused-271",
                                        "formControl": "MuiInput-formControl-270",
                                        "fullWidth": "MuiInput-fullWidth-276",
                                        "input": "MuiInput-input-277",
                                        "inputMarginDense": "MuiInput-inputMarginDense-278",
                                        "inputMultiline": "MuiInput-inputMultiline-279",
                                        "inputType": "MuiInput-inputType-280",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-281",
                                        "multiline": "MuiInput-multiline-275",
                                        "root": "MuiInput-root-269 MuiInput-underline-273",
                                        "underline": null,
                                      }
                                    }
                                    form="signInForm"
                                    fullWidth={false}
                                    id="username"
                                    inputComponent="input"
                                    label="Username"
                                    multiline={false}
                                    name="username"
                                    onChange={[Function]}
                                    optional="undefined"
                                    type="text"
                                  >
                                    <WithFormControlContext(InputBase)
                                      autoFocus={true}
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-287",
                                          "adornedStart": "MuiInputBase-adornedStart-286",
                                          "disabled": "MuiInputBase-disabled-285 MuiInput-disabled-272",
                                          "error": "MuiInputBase-error-288 MuiInput-error-274",
                                          "focused": "MuiInputBase-focused-284 MuiInput-focused-271",
                                          "formControl": "MuiInputBase-formControl-283 MuiInput-formControl-270",
                                          "fullWidth": "MuiInputBase-fullWidth-291 MuiInput-fullWidth-276",
                                          "input": "MuiInputBase-input-292 MuiInput-input-277",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-298",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-297",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-293 MuiInput-inputMarginDense-278",
                                          "inputMultiline": "MuiInputBase-inputMultiline-294 MuiInput-inputMultiline-279",
                                          "inputType": "MuiInputBase-inputType-295 MuiInput-inputType-280",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-296 MuiInput-inputTypeSearch-281",
                                          "marginDense": "MuiInputBase-marginDense-289",
                                          "multiline": "MuiInputBase-multiline-290 MuiInput-multiline-275",
                                          "root": "MuiInputBase-root-282 MuiInput-root-269 MuiInput-underline-273",
                                        }
                                      }
                                      form="signInForm"
                                      fullWidth={false}
                                      id="username"
                                      inputComponent="input"
                                      label="Username"
                                      multiline={false}
                                      name="username"
                                      onChange={[Function]}
                                      optional="undefined"
                                      type="text"
                                    >
                                      <InputBase
                                        autoFocus={true}
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-287",
                                            "adornedStart": "MuiInputBase-adornedStart-286",
                                            "disabled": "MuiInputBase-disabled-285 MuiInput-disabled-272",
                                            "error": "MuiInputBase-error-288 MuiInput-error-274",
                                            "focused": "MuiInputBase-focused-284 MuiInput-focused-271",
                                            "formControl": "MuiInputBase-formControl-283 MuiInput-formControl-270",
                                            "fullWidth": "MuiInputBase-fullWidth-291 MuiInput-fullWidth-276",
                                            "input": "MuiInputBase-input-292 MuiInput-input-277",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-298",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-297",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-293 MuiInput-inputMarginDense-278",
                                            "inputMultiline": "MuiInputBase-inputMultiline-294 MuiInput-inputMultiline-279",
                                            "inputType": "MuiInputBase-inputType-295 MuiInput-inputType-280",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-296 MuiInput-inputTypeSearch-281",
                                            "marginDense": "MuiInputBase-marginDense-289",
                                            "multiline": "MuiInputBase-multiline-290 MuiInput-multiline-275",
                                            "root": "MuiInputBase-root-282 MuiInput-root-269 MuiInput-underline-273",
                                          }
                                        }
                                        form="signInForm"
                                        fullWidth={false}
                                        id="username"
                                        inputComponent="input"
                                        label="Username"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": true,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": true,
                                            "variant": "standard",
                                          }
                                        }
                                        multiline={false}
                                        name="username"
                                        onChange={[Function]}
                                        optional="undefined"
                                        type="text"
                                      >
                                        <div
                                          className="MuiInputBase-root-282 MuiInput-root-269 MuiInput-underline-273 MuiInputBase-focused-284 MuiInput-focused-271 MuiInputBase-formControl-283 MuiInput-formControl-270"
                                          form="signInForm"
                                          label="Username"
                                          onClick={[Function]}
                                          optional="undefined"
                                        >
                                          <input
                                            aria-invalid={false}
                                            autoFocus={true}
                                            className="MuiInputBase-input-292 MuiInput-input-277"
                                            disabled={false}
                                            id="username"
                                            name="username"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={true}
                                            type="text"
                                          />
                                        </div>
                                      </InputBase>
                                    </WithFormControlContext(InputBase)>
                                  </WithStyles(WithFormControlContext(InputBase))>
                                </Input>
                              </WithStyles(Input)>
                            </div>
                          </FormControl>
                        </WithStyles(FormControl)>
                      </CustomInputControl>
                    </Component>
                    <Component
                      form="signInForm"
                      id="password"
                      label="Password"
                      type="password"
                    >
                      <CustomInputControl
                        form="signInForm"
                        id="password"
                        label="Password"
                        onChange={[MockFunction]}
                        type="password"
                      >
                        <WithStyles(FormControl)
                          fullWidth={true}
                          margin="normal"
                          required={true}
                        >
                          <FormControl
                            classes={
                              Object {
                                "fullWidth": "MuiFormControl-fullWidth-250",
                                "marginDense": "MuiFormControl-marginDense-249",
                                "marginNormal": "MuiFormControl-marginNormal-248",
                                "root": "MuiFormControl-root-247",
                              }
                            }
                            component="div"
                            disabled={false}
                            error={false}
                            fullWidth={true}
                            margin="normal"
                            required={true}
                            variant="standard"
                          >
                            <div
                              className="MuiFormControl-root-247 MuiFormControl-marginNormal-248 MuiFormControl-fullWidth-250"
                            >
                              <WithStyles(WithFormControlContext(InputLabel))
                                htmlFor="password"
                              >
                                <WithFormControlContext(InputLabel)
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-259",
                                      "disabled": "MuiInputLabel-disabled-253",
                                      "error": "MuiInputLabel-error-254",
                                      "filled": "MuiInputLabel-filled-260",
                                      "focused": "MuiInputLabel-focused-252",
                                      "formControl": "MuiInputLabel-formControl-256",
                                      "marginDense": "MuiInputLabel-marginDense-257",
                                      "outlined": "MuiInputLabel-outlined-261",
                                      "required": "MuiInputLabel-required-255",
                                      "root": "MuiInputLabel-root-251",
                                      "shrink": "MuiInputLabel-shrink-258",
                                    }
                                  }
                                  htmlFor="password"
                                >
                                  <InputLabel
                                    classes={
                                      Object {
                                        "animated": "MuiInputLabel-animated-259",
                                        "disabled": "MuiInputLabel-disabled-253",
                                        "error": "MuiInputLabel-error-254",
                                        "filled": "MuiInputLabel-filled-260",
                                        "focused": "MuiInputLabel-focused-252",
                                        "formControl": "MuiInputLabel-formControl-256",
                                        "marginDense": "MuiInputLabel-marginDense-257",
                                        "outlined": "MuiInputLabel-outlined-261",
                                        "required": "MuiInputLabel-required-255",
                                        "root": "MuiInputLabel-root-251",
                                        "shrink": "MuiInputLabel-shrink-258",
                                      }
                                    }
                                    disableAnimation={false}
                                    htmlFor="password"
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": true,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <WithStyles(WithFormControlContext(FormLabel))
                                      className="MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259"
                                      classes={
                                        Object {
                                          "disabled": "MuiInputLabel-disabled-253",
                                          "error": "MuiInputLabel-error-254",
                                          "focused": "MuiInputLabel-focused-252",
                                          "required": "MuiInputLabel-required-255",
                                        }
                                      }
                                      data-shrink={false}
                                      htmlFor="password"
                                    >
                                      <WithFormControlContext(FormLabel)
                                        className="MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-268",
                                            "disabled": "MuiFormLabel-disabled-264 MuiInputLabel-disabled-253",
                                            "error": "MuiFormLabel-error-265 MuiInputLabel-error-254",
                                            "filled": "MuiFormLabel-filled-266",
                                            "focused": "MuiFormLabel-focused-263 MuiInputLabel-focused-252",
                                            "required": "MuiFormLabel-required-267 MuiInputLabel-required-255",
                                            "root": "MuiFormLabel-root-262",
                                          }
                                        }
                                        data-shrink={false}
                                        htmlFor="password"
                                      >
                                        <FormLabel
                                          className="MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk-268",
                                              "disabled": "MuiFormLabel-disabled-264 MuiInputLabel-disabled-253",
                                              "error": "MuiFormLabel-error-265 MuiInputLabel-error-254",
                                              "filled": "MuiFormLabel-filled-266",
                                              "focused": "MuiFormLabel-focused-263 MuiInputLabel-focused-252",
                                              "required": "MuiFormLabel-required-267 MuiInputLabel-required-255",
                                              "root": "MuiFormLabel-root-262",
                                            }
                                          }
                                          component="label"
                                          data-shrink={false}
                                          htmlFor="password"
                                          muiFormControl={
                                            Object {
                                              "adornedStart": false,
                                              "disabled": false,
                                              "error": false,
                                              "filled": false,
                                              "focused": false,
                                              "margin": "normal",
                                              "onBlur": [Function],
                                              "onEmpty": [Function],
                                              "onFilled": [Function],
                                              "onFocus": [Function],
                                              "required": true,
                                              "variant": "standard",
                                            }
                                          }
                                        >
                                          <label
                                            className="MuiFormLabel-root-262 MuiFormLabel-required-267 MuiInputLabel-required-255 MuiInputLabel-root-251 MuiInputLabel-formControl-256 MuiInputLabel-animated-259"
                                            data-shrink={false}
                                            htmlFor="password"
                                          >
                                            Password
                                            <span
                                              className="MuiFormLabel-asterisk-268"
                                            >
                                               *
                                            </span>
                                          </label>
                                        </FormLabel>
                                      </WithFormControlContext(FormLabel)>
                                    </WithStyles(WithFormControlContext(FormLabel))>
                                  </InputLabel>
                                </WithFormControlContext(InputLabel)>
                              </WithStyles(WithFormControlContext(InputLabel))>
                              <WithStyles(Input)
                                form="signInForm"
                                id="password"
                                label="Password"
                                name="password"
                                onChange={[Function]}
                                optional="undefined"
                                type="password"
                              >
                                <Input
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-272",
                                      "error": "MuiInput-error-274",
                                      "focused": "MuiInput-focused-271",
                                      "formControl": "MuiInput-formControl-270",
                                      "fullWidth": "MuiInput-fullWidth-276",
                                      "input": "MuiInput-input-277",
                                      "inputMarginDense": "MuiInput-inputMarginDense-278",
                                      "inputMultiline": "MuiInput-inputMultiline-279",
                                      "inputType": "MuiInput-inputType-280",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-281",
                                      "multiline": "MuiInput-multiline-275",
                                      "root": "MuiInput-root-269",
                                      "underline": "MuiInput-underline-273",
                                    }
                                  }
                                  form="signInForm"
                                  id="password"
                                  label="Password"
                                  name="password"
                                  onChange={[Function]}
                                  optional="undefined"
                                  type="password"
                                >
                                  <WithStyles(WithFormControlContext(InputBase))
                                    classes={
                                      Object {
                                        "disabled": "MuiInput-disabled-272",
                                        "error": "MuiInput-error-274",
                                        "focused": "MuiInput-focused-271",
                                        "formControl": "MuiInput-formControl-270",
                                        "fullWidth": "MuiInput-fullWidth-276",
                                        "input": "MuiInput-input-277",
                                        "inputMarginDense": "MuiInput-inputMarginDense-278",
                                        "inputMultiline": "MuiInput-inputMultiline-279",
                                        "inputType": "MuiInput-inputType-280",
                                        "inputTypeSearch": "MuiInput-inputTypeSearch-281",
                                        "multiline": "MuiInput-multiline-275",
                                        "root": "MuiInput-root-269 MuiInput-underline-273",
                                        "underline": null,
                                      }
                                    }
                                    form="signInForm"
                                    fullWidth={false}
                                    id="password"
                                    inputComponent="input"
                                    label="Password"
                                    multiline={false}
                                    name="password"
                                    onChange={[Function]}
                                    optional="undefined"
                                    type="password"
                                  >
                                    <WithFormControlContext(InputBase)
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-287",
                                          "adornedStart": "MuiInputBase-adornedStart-286",
                                          "disabled": "MuiInputBase-disabled-285 MuiInput-disabled-272",
                                          "error": "MuiInputBase-error-288 MuiInput-error-274",
                                          "focused": "MuiInputBase-focused-284 MuiInput-focused-271",
                                          "formControl": "MuiInputBase-formControl-283 MuiInput-formControl-270",
                                          "fullWidth": "MuiInputBase-fullWidth-291 MuiInput-fullWidth-276",
                                          "input": "MuiInputBase-input-292 MuiInput-input-277",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-298",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-297",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-293 MuiInput-inputMarginDense-278",
                                          "inputMultiline": "MuiInputBase-inputMultiline-294 MuiInput-inputMultiline-279",
                                          "inputType": "MuiInputBase-inputType-295 MuiInput-inputType-280",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-296 MuiInput-inputTypeSearch-281",
                                          "marginDense": "MuiInputBase-marginDense-289",
                                          "multiline": "MuiInputBase-multiline-290 MuiInput-multiline-275",
                                          "root": "MuiInputBase-root-282 MuiInput-root-269 MuiInput-underline-273",
                                        }
                                      }
                                      form="signInForm"
                                      fullWidth={false}
                                      id="password"
                                      inputComponent="input"
                                      label="Password"
                                      multiline={false}
                                      name="password"
                                      onChange={[Function]}
                                      optional="undefined"
                                      type="password"
                                    >
                                      <InputBase
                                        classes={
                                          Object {
                                            "adornedEnd": "MuiInputBase-adornedEnd-287",
                                            "adornedStart": "MuiInputBase-adornedStart-286",
                                            "disabled": "MuiInputBase-disabled-285 MuiInput-disabled-272",
                                            "error": "MuiInputBase-error-288 MuiInput-error-274",
                                            "focused": "MuiInputBase-focused-284 MuiInput-focused-271",
                                            "formControl": "MuiInputBase-formControl-283 MuiInput-formControl-270",
                                            "fullWidth": "MuiInputBase-fullWidth-291 MuiInput-fullWidth-276",
                                            "input": "MuiInputBase-input-292 MuiInput-input-277",
                                            "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-298",
                                            "inputAdornedStart": "MuiInputBase-inputAdornedStart-297",
                                            "inputMarginDense": "MuiInputBase-inputMarginDense-293 MuiInput-inputMarginDense-278",
                                            "inputMultiline": "MuiInputBase-inputMultiline-294 MuiInput-inputMultiline-279",
                                            "inputType": "MuiInputBase-inputType-295 MuiInput-inputType-280",
                                            "inputTypeSearch": "MuiInputBase-inputTypeSearch-296 MuiInput-inputTypeSearch-281",
                                            "marginDense": "MuiInputBase-marginDense-289",
                                            "multiline": "MuiInputBase-multiline-290 MuiInput-multiline-275",
                                            "root": "MuiInputBase-root-282 MuiInput-root-269 MuiInput-underline-273",
                                          }
                                        }
                                        form="signInForm"
                                        fullWidth={false}
                                        id="password"
                                        inputComponent="input"
                                        label="Password"
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": true,
                                            "variant": "standard",
                                          }
                                        }
                                        multiline={false}
                                        name="password"
                                        onChange={[Function]}
                                        optional="undefined"
                                        type="password"
                                      >
                                        <div
                                          className="MuiInputBase-root-282 MuiInput-root-269 MuiInput-underline-273 MuiInputBase-formControl-283 MuiInput-formControl-270"
                                          form="signInForm"
                                          label="Password"
                                          onClick={[Function]}
                                          optional="undefined"
                                        >
                                          <input
                                            aria-invalid={false}
                                            className="MuiInputBase-input-292 MuiInput-input-277 MuiInputBase-inputType-295 MuiInput-inputType-280"
                                            disabled={false}
                                            id="password"
                                            name="password"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            required={true}
                                            type="password"
                                          />
                                        </div>
                                      </InputBase>
                                    </WithFormControlContext(InputBase)>
                                  </WithStyles(WithFormControlContext(InputBase))>
                                </Input>
                              </WithStyles(Input)>
                            </div>
                          </FormControl>
                        </WithStyles(FormControl)>
                      </CustomInputControl>
                    </Component>
                    <WithStyles(Button)
                      className="Component-submit-8"
                      color="primary"
                      fullWidth={true}
                      id="signinButton"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <Button
                        className="Component-submit-8"
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-320",
                            "contained": "MuiButton-contained-310",
                            "containedPrimary": "MuiButton-containedPrimary-311",
                            "containedSecondary": "MuiButton-containedSecondary-312",
                            "disabled": "MuiButton-disabled-319",
                            "extendedFab": "MuiButton-extendedFab-317",
                            "fab": "MuiButton-fab-316",
                            "flat": "MuiButton-flat-304",
                            "flatPrimary": "MuiButton-flatPrimary-305",
                            "flatSecondary": "MuiButton-flatSecondary-306",
                            "focusVisible": "MuiButton-focusVisible-318",
                            "fullWidth": "MuiButton-fullWidth-324",
                            "label": "MuiButton-label-300",
                            "mini": "MuiButton-mini-321",
                            "outlined": "MuiButton-outlined-307",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-308",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-309",
                            "raised": "MuiButton-raised-313",
                            "raisedPrimary": "MuiButton-raisedPrimary-314",
                            "raisedSecondary": "MuiButton-raisedSecondary-315",
                            "root": "MuiButton-root-299",
                            "sizeLarge": "MuiButton-sizeLarge-323",
                            "sizeSmall": "MuiButton-sizeSmall-322",
                            "text": "MuiButton-text-301",
                            "textPrimary": "MuiButton-textPrimary-302",
                            "textSecondary": "MuiButton-textSecondary-303",
                          }
                        }
                        color="primary"
                        component="button"
                        disableFocusRipple={false}
                        disabled={false}
                        fullWidth={true}
                        id="signinButton"
                        mini={false}
                        onClick={[Function]}
                        size="medium"
                        type="button"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-299 MuiButton-contained-310 MuiButton-containedPrimary-311 MuiButton-raised-313 MuiButton-raisedPrimary-314 MuiButton-fullWidth-324 Component-submit-8"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-318"
                          id="signinButton"
                          onClick={[Function]}
                          type="button"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-299 MuiButton-contained-310 MuiButton-containedPrimary-311 MuiButton-raised-313 MuiButton-raisedPrimary-314 MuiButton-fullWidth-324 Component-submit-8"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-326",
                                "focusVisible": "MuiButtonBase-focusVisible-327",
                                "root": "MuiButtonBase-root-325",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-318"
                            id="signinButton"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root-325 MuiButton-root-299 MuiButton-contained-310 MuiButton-containedPrimary-311 MuiButton-raised-313 MuiButton-raisedPrimary-314 MuiButton-fullWidth-324 Component-submit-8"
                              disabled={false}
                              id="signinButton"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <span
                                className="MuiButton-label-300"
                              >
                                Sign in
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-332",
                                        "childLeaving": "MuiTouchRipple-childLeaving-333",
                                        "childPulsate": "MuiTouchRipple-childPulsate-334",
                                        "ripple": "MuiTouchRipple-ripple-329",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-331",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-330",
                                        "root": "MuiTouchRipple-root-328",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-328"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-328"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                    <Link
                      className="Component-link-4"
                      replace={false}
                      to="/signup"
                    >
                      <a
                        className="Component-link-4"
                        href="/signup"
                        onClick={[Function]}
                      >
                        <WithStyles(Button)
                          fullWidth={true}
                          id="register"
                          variant="contained"
                        >
                          <Button
                            classes={
                              Object {
                                "colorInherit": "MuiButton-colorInherit-320",
                                "contained": "MuiButton-contained-310",
                                "containedPrimary": "MuiButton-containedPrimary-311",
                                "containedSecondary": "MuiButton-containedSecondary-312",
                                "disabled": "MuiButton-disabled-319",
                                "extendedFab": "MuiButton-extendedFab-317",
                                "fab": "MuiButton-fab-316",
                                "flat": "MuiButton-flat-304",
                                "flatPrimary": "MuiButton-flatPrimary-305",
                                "flatSecondary": "MuiButton-flatSecondary-306",
                                "focusVisible": "MuiButton-focusVisible-318",
                                "fullWidth": "MuiButton-fullWidth-324",
                                "label": "MuiButton-label-300",
                                "mini": "MuiButton-mini-321",
                                "outlined": "MuiButton-outlined-307",
                                "outlinedPrimary": "MuiButton-outlinedPrimary-308",
                                "outlinedSecondary": "MuiButton-outlinedSecondary-309",
                                "raised": "MuiButton-raised-313",
                                "raisedPrimary": "MuiButton-raisedPrimary-314",
                                "raisedSecondary": "MuiButton-raisedSecondary-315",
                                "root": "MuiButton-root-299",
                                "sizeLarge": "MuiButton-sizeLarge-323",
                                "sizeSmall": "MuiButton-sizeSmall-322",
                                "text": "MuiButton-text-301",
                                "textPrimary": "MuiButton-textPrimary-302",
                                "textSecondary": "MuiButton-textSecondary-303",
                              }
                            }
                            color="default"
                            component="button"
                            disableFocusRipple={false}
                            disabled={false}
                            fullWidth={true}
                            id="register"
                            mini={false}
                            size="medium"
                            type="button"
                            variant="contained"
                          >
                            <WithStyles(ButtonBase)
                              className="MuiButton-root-299 MuiButton-contained-310 MuiButton-raised-313 MuiButton-fullWidth-324"
                              component="button"
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-318"
                              id="register"
                              type="button"
                            >
                              <ButtonBase
                                centerRipple={false}
                                className="MuiButton-root-299 MuiButton-contained-310 MuiButton-raised-313 MuiButton-fullWidth-324"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-326",
                                    "focusVisible": "MuiButtonBase-focusVisible-327",
                                    "root": "MuiButtonBase-root-325",
                                  }
                                }
                                component="button"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                focusVisibleClassName="MuiButton-focusVisible-318"
                                id="register"
                                tabIndex="0"
                                type="button"
                              >
                                <button
                                  className="MuiButtonBase-root-325 MuiButton-root-299 MuiButton-contained-310 MuiButton-raised-313 MuiButton-fullWidth-324"
                                  disabled={false}
                                  id="register"
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex="0"
                                  type="button"
                                >
                                  <span
                                    className="MuiButton-label-300"
                                  >
                                    Not a user? Sign up here
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-332",
                                            "childLeaving": "MuiTouchRipple-childLeaving-333",
                                            "childPulsate": "MuiTouchRipple-childPulsate-334",
                                            "ripple": "MuiTouchRipple-ripple-329",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-331",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-330",
                                            "root": "MuiTouchRipple-root-328",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-328"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-328"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </button>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </Button>
                        </WithStyles(Button)>
                      </a>
                    </Link>
                  </form>
                </div>
              </Paper>
            </WithStyles(Paper)>
          </main>
        </_SignInForm>
      </Router>
    </MemoryRouter>
  </Component>
</WithStyles(Component)>
`;
